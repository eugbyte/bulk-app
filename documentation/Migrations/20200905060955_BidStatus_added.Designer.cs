// <auto-generated />
using System;
using BulkApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BulkApi.Migrations
{
    [DbContext(typeof(BulkDbContext))]
    [Migration("20200905060955_BidStatus_added")]
    partial class BidStatus_added
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BulkApi.Models.Bid", b =>
                {
                    b.Property<int>("BidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BidSuccessDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CollectionAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DiscountSchemeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsInCart")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BidId");

                    b.HasIndex("CustomerId1");

                    b.HasIndex("DiscountSchemeId");

                    b.ToTable("Bids");

                    b.HasData(
                        new
                        {
                            BidId = 1,
                            CollectionAddress = "AMK MRT",
                            CustomerId = 1,
                            DiscountSchemeId = 1,
                            IsInCart = false,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("BulkApi.Models.Customer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId1");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = "fbb952ab-eae8-49e6-b43d-7c57572462ac",
                            AccessFailedCount = 0,
                            Address = "",
                            ConcurrencyStamp = "ba51cbf6-484e-44d4-862a-866b2320642b",
                            CustomerId = 1,
                            Email = "john@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a46507b5-a82c-4b40-b583-2cadc9ed6946",
                            TwoFactorEnabled = false,
                            UserName = "John"
                        });
                });

            modelBuilder.Entity("BulkApi.Models.DiscountScheme", b =>
                {
                    b.Property<int>("DiscountSchemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("DeliveryCharge")
                        .HasColumnType("float");

                    b.Property<double>("DiscountedPrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MinOrderQnty")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("DiscountSchemeId");

                    b.HasIndex("ProductId");

                    b.ToTable("DiscountSchemes");

                    b.HasData(
                        new
                        {
                            DiscountSchemeId = 1,
                            DeliveryCharge = 10.0,
                            DiscountedPrice = 70.0,
                            ExpiryDate = new DateTime(2020, 10, 5, 14, 9, 54, 693, DateTimeKind.Local).AddTicks(1242),
                            MinOrderQnty = 5,
                            ProductId = 1
                        });
                });

            modelBuilder.Entity("BulkApi.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OriginalPrice")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Category = "Shoe",
                            Description = "white shoe",
                            Name = "Awesome Shoes",
                            OriginalPrice = 100.0
                        });
                });

            modelBuilder.Entity("BulkApi.Models.Bid", b =>
                {
                    b.HasOne("BulkApi.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId1");

                    b.HasOne("BulkApi.Models.DiscountScheme", "DiscountScheme")
                        .WithMany("Bids")
                        .HasForeignKey("DiscountSchemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BulkApi.Models.Customer", b =>
                {
                    b.HasOne("BulkApi.Models.Customer", null)
                        .WithMany("Customers")
                        .HasForeignKey("CustomerId1");
                });

            modelBuilder.Entity("BulkApi.Models.DiscountScheme", b =>
                {
                    b.HasOne("BulkApi.Models.Product", "Product")
                        .WithMany("DiscountSchemes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
