{"version":3,"sources":["images/e_commerce.png","../node_modules/jspdf/dist sync","store/actionEnums.ts","store/actions/errorAction.ts","services/UtilService.ts","store/thunks/discountSchemeThunk.ts","components/discountSchemePage/CardComponent.tsx","components/shared/ErrorNotification.tsx","containers/DiscountSchemesPage.tsx","store/thunks/bidThunk.ts","components/shared/DataTable.tsx","components/shared/CartButtons.tsx","components/shared/SnackbarComponent.tsx","components/cartPage/OrderCheckoutComponent.tsx","models/SelectListItem.ts","components/shared/SelectComponents.tsx","components/shared/TextComponent.tsx","containers/CartPage.tsx","containers/OrdersPage.tsx","models/DiscountScheme.ts","models/Product.ts","components/shared/DialogComponent.tsx","containers/ProducerDiscountSchemePage.tsx","store/thunks/productThunk.ts","components/discountSchemeForm/DatePickerComponent.tsx","containers/DiscountSchemeForm.tsx","containers/ProductForm.tsx","components/shared/TextFieldComponents.tsx","containers/ProductsPage.tsx","models/IdentityUser.ts","models/AuthVM.ts","containers/LoginForm.tsx","store/thunks/authThunk.ts","containers/ErrorPage.tsx","components/app/PrivateRoute.tsx","enums/Claims.tsx","components/app/NavBar.tsx","models/Bid.ts","containers/DiscountSchemeDetail/DiscountSchemeDetailPage.tsx","containers/DiscountSchemeDetail/DiscountSchemeDetailHOC.tsx","App.tsx","serviceWorker.ts","store/reducers/discountSchemeReducer.ts","store/reducers/bidReducer.ts","store/reducers/productReducer.ts","store/reducers/errorReducer.ts","store/reducers/authReducer.ts","store/rootReducer.ts","index.tsx"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","ACTIONS","errorAction","type","error","UtilService","jwt","JSON","parse","localStorage","getItem","header","Headers","append","console","log","getDiscountSchemesWithBidOfProducer","producerId","dispatch","a","GET_DISCOUNTSCHEME_OF_PRODUCER_REQUEST","message","fetch","getApiUrl","headers","getAuthHeader","response","ok","json","discountSchemes","GET_DISCOUNTSCHEME_OF_PRODUCER_RECEIVED","httpMessage","HTTP_READ_SUCCESS","ERROR","CardComponent","title","paras","actionTitle","action","classes","useStyles","Card","className","cardWidth","CardActionArea","onClick","CardMedia","component","height","cardHeight","image","CardContent","Typography","gutterBottom","variant","CardActions","Button","size","color","makeStyles","theme","createStyles","backdrop","zIndex","drawer","maxWidth","ErrorNotification","autoHideDuration","useDispatch","useState","openAlert","setOpenAlert","handleCloseAlert","cleanUpErrorAction","CLEAR_ERROR","useEffect","Snackbar","open","onClose","severity","Alert","props","elevation","DiscountSchemesPage","history","useHistory","useSelector","discountSchemeReducer","errorReducer","document","getJWT","GET_DISCOUNTSCHEMES_REQUEST","GET_DISCOUNTSCHEMES_RECEIVED","cards","index","ds","dateString","expiryDate","Date","toString","toDateString","product","name","currentBids","bids","filter","bid","isInCart","reduce","accum","quantity","textDict","discountedPrice","minOrderQnty","Object","entries","key","value","para","align","originalPrice","push","card","Grid","item","xs","sm","lg","discountSchemeId","length","fullWidth","container","spacing","typo","fontVariant","width","margin","paddingLeft","paddingRight","updateBidInCartAsync","bidId","UPDATE_BID_IN_CART_REQUEST","messages","method","body","stringify","updatedBid","UPDATE_BID_IN_CART_RECEIVED","statusText","HTTP_UPDATE_SUCCESS","DataTable","data","columnNames","accessors","handleChecked","idColumnAccessorName","pageSize","actionIcon","enablePaging","enableSearch","actionMessage","enableSelection","detailPanelFieldName","enabledDetailPanel","headerDicts","i","accessor","headerDict","icons","tableIcons","columns","options","selection","search","paging","rowStyle","detailPanel","rowData","disabled","icon","display","displayNone","render","detailPanelFielddName","returnDetailTable","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","AddShoppingCartIcon","CartButtons","setQuantity","ButtonGroup","aria-label","alignLeft","flexDirection","alignItems","alignCenter","alignRight","SnackbarComponent","setOpen","cleanUp","handleClose","reason","OrderCheckoutComponent","rowIds","handleOrder","selectedBids","includes","totalDeliveryCharge","map","numBidsAtAddress","addressBidCountDict","collectionAddress","deliveryCharge","discountScheme","charge","totalPrice","totalQuantity","Paper","paragraph","alignContent","SelectListItem","text","selected","this","SelectControlledComponent","state","selectListItems","handleChange","isError","formHelperText","FormControl","formControl","InputLabel","Select","labelId","autoWidth","onChange","event","MenuItem","undefined","divider","selectListItem","FormHelperText","minWidth","selectEmpty","marginTop","TextComponent","Container","Row","checkbox","updateCartComponent","deleteButton","CartPage","notificationMessage","setNotificationMessage","handleNotification","isOpen","bidsInCart","bidReducer","setBids","cloneDeep","customerId","GET_BIDSOFCUSTOMER_INCART_REQUEST","GET_BIDSOFCUSTOMER_INCART_RECEIVED","getBidsOfCustomerInCartAsync","selectedRowBidIds","setSelectedRowBidIds","apiMessage","HTTP_DELETE_SUCCESS","HTTP_UPDATE_ORDER_SUCCESS","rows","row","avgDeliveryCharge","style","borderBottom","fontSize","createRowFromBid","handleUpdateCart","newQuantity","bidsCopy","bidCopy","updateAction","Checkbox","newSelectedRowIds","deleteAction","DELETE_BID_IN_CART_REQUEST","DELETE_BID_IN_CART_RECEIVED","deleteBidFromCartAsync","newBids","address","selectedAddress","target","descriptionDict","description","quantityDict","currentTotalBids","deliveryDict","ORDER_BIDS_IN_CART_REQUEST","ORDER_BIDS_IN_CART_RECEIVED","orderBidsFromCart","remainingBidsRequired","bidExpiryDate","bidStatus","OrdersPage","GET_PENDING_OR_SUCCESSFUL_BIDS_REQUEST","GET_PENDING_OR_SUCCESSFUL_BIDS_RECEIVED","getPendingOrSuccessfulBids","bidSuccessDate","DiscountScheme","productId","Product","category","DialogComponent","toggleOpen","content","showPicture","secondaryActionTitle","secondaryAction","Dialog","aria-labelledby","DialogTitle","DialogContent","imageUrl","DialogActions","delete","ProducerDiscountSchemePage","immutableDiscountSchemes","products","uniqBy","setDiscountSchemes","status","setStatus","productName","setProductName","discountSchemesCopy","determineStatusOfScheme","toLowerCase","openProductDialog","setOpenProductDialog","setProduct","productTextDict","productTextComponent","openDeleteDialog","setOpenDeleteDialog","targetDiscountScheme","setTargetDiscountScheme","httpResponseMessage","createRowFromScheme","isDisableDelete","tooltipMessage","find","selectedStatus","Autocomplete","getOptionLabel","option","onInputChange","renderInput","params","TextField","label","DELETE_DISCOUNTSCHEME_REQUEST","deletedDiscountScheme","DELETE_DISCOUNTSCHEME_RECEIVED","isSchemeSuccess","some","hasBidExpired","getProductsAsync","GET_PRODUCTS_REQUEST","GET_PRODUCTS_RECEIVED","DatePickerUncontrolledComponent","control","errors","defaultValue","errorMessage","rules","helperText","DatePickerControlledComponent","utils","DateFnsUtils","disableToolbar","format","guid","KeyboardButtonProps","FORM_NAMES","TextFieldUncontrolledComponent","isFullWidth","adornment","InputProps","startAdornment","InputAdornment","position","DiscountSchemeForm","productReducer","useForm","handleSubmit","getValues","watchProductId","watch","selectedProduct","HTTP_CREATE_SUCCESS","onSubmit","CREATE_DISCOUNTSCHEME_REQUEST","createdDiscountScheme","CREATE_DISCOUNTSCHEME_RECEIVED","createDiscountSchemeAsync","createDiscountScheme","justify","textAlign","bottom","EmptyGridRow","required","min","ProductForm","routeParams","useParams","parseInt","mode","productToUpdate","GET_PRODUCT_REQUEST","GET_PRODUCT_RECEIVED","getProductAsync","reset","setValue","openSnackbar","setOpenSnackbar","initializeProduct","apiError","createdProduct","createProductsAsync","UPDATE_PRODUCT_REQUEST","updatedProduct","updateProductAsync","GridRow","update","ProductsPage","targetProduct","setTargetProduct","createRow","DELETE_PRODUCT_REQUEST","deletedProduct","DELETE_PRODUCT_RECEIVED","Claims","IdentityUser","userName","passwordHash","AuthVM","isAuthenticated","email","claims","LoginForm","openSnackBar","setOpenSnackBar","defaultAuthVM","authVM","authReducer","identityUser","LOGIN_REQUEST","LOGIN_FAILED","LOGIN_SUCCESS","loginAsync","ErrorPage","PrivateRoute","path","requiredClaims","isAuthorized","every","requiredClaim","linkToLoginForm","to","CLAIMS","NavBar","logoutMessage","LOGOUT_SUCCESS","Navbar","expand","blueBg","Brand","navLink","Toggle","aria-controls","Collapse","Nav","CONSUMER","PRODUCER","DropdownButton","NavDropdown","Item","Link","as","NavLink","LOGOUT","logoutSync","textDecoration","backgroundColor","dropDownLink","Bid","DiscountSchemeDetailPage","MODE","bidIdToUpdate","GET_DISCOUNTSCHEME_REQUEST","GET_DISCOUNTSCHEME_RECEIVED","getDiscountSchemeAsync","setAddress","leftExpiryDateDict","rightDescriptionDict","leftPriceDict","rightPriceDict","leftQuantityDict","rightQuantityDict","addressTextDict","avgDeliveryChargeDict","e_commerce","ADD_BID_TO_CART_REQUEST","createdBid","ADD_BID_TO_CART_RECEIVED","addBidToCartAsync","DiscountSchemeDetailHOC","App","exact","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","prevState","newState","CREATE_PRODUCT_REQUEST","CREATE_PRODUCT_RECEIVED","UPDATE_PRODUCT_RECEIVED","setItem","removeItem","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ef6d98dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/e_commerce.3acf207a.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 384;","export enum ACTIONS { \r\n    GET_DISCOUNTSCHEMES_REQUEST = \"GET_DISCOUNTSCHEMES_REQUEST\",\r\n    GET_DISCOUNTSCHEMES_RECEIVED = \"GET_DISCOUNTSCHEMES_RECEIVED\",\r\n\r\n    GET_DISCOUNTSCHEME_REQUEST = \"GET_DISCOUNTSCHEME_REQUEST\",\r\n    GET_DISCOUNTSCHEME_RECEIVED = \"GET_DISCOUNTSCHEME_RECEIVED\",\r\n\r\n    GET_DISCOUNTSCHEME_OF_PRODUCER_REQUEST = \"GET_DISCOUNTSCHEME_OF_PRODUCER_REQUEST\",\r\n    GET_DISCOUNTSCHEME_OF_PRODUCER_RECEIVED = \"GET_DISCOUNTSCHEME_OF_PRODUCER_RECEIVED\",\r\n\r\n    CREATE_DISCOUNTSCHEME_REQUEST = \"CREATE_DISCOUNTSCHEME_REQUEST\",\r\n    CREATE_DISCOUNTSCHEME_RECEIVED = \"CREATE_DISCOUNTSCHEME_RECEIVED\",\r\n\r\n    DELETE_DISCOUNTSCHEME_REQUEST = \"DELETE_DISCOUNTSCHEME_REQUEST\",\r\n    DELETE_DISCOUNTSCHEME_RECEIVED = \"DELETE_DISCOUNTSCHEME_RECEIVED\",\r\n\r\n    GET_BIDSOFCUSTOMER_INCART_REQUEST = \"GET_BIDSOFCUSTOMER_INCART_REQUEST\",\r\n    GET_BIDSOFCUSTOMER_INCART_RECEIVED = \"GET_BIDSOFCUSTOMER_INCART_RECEIVED\",\r\n\r\n    ADD_BID_TO_CART_REQUEST = \"ADD_BID_TO_CART_REQUEST\",\r\n    ADD_BID_TO_CART_RECEIVED = \"ADD_BID_TO_CART_RECEIVED\",\r\n\r\n    UPDATE_BID_IN_CART_REQUEST = \"UPDATE_BID_IN_CART_REQUEST\",\r\n    UPDATE_BID_IN_CART_RECEIVED = \"UPDATE_BID_IN_CART_RECEIVED\",\r\n\r\n    DELETE_BID_IN_CART_REQUEST = \"DELETE_BID_IN_CART_REQUEST\",\r\n    DELETE_BID_IN_CART_RECEIVED = \"DELETE_BID_IN_CART_RECEIVED\",\r\n\r\n    ERROR = \"ERROR\",\r\n    CLEAR_ERROR = \"CLEAR_ERROR\",\r\n\r\n    ORDER_BIDS_IN_CART_REQUEST = \"ORDER_BIDS_IN_CART_REQUEST\",\r\n    ORDER_BIDS_IN_CART_RECEIVED = \"ORDER_BIDS_IN_CART_RECEIVED\",\r\n\r\n    GET_PRODUCTS_REQUEST = \"GET_PRODUCTS_REQUEST\",\r\n    GET_PRODUCTS_RECEIVED = \"GET_PRODUCTS_RECEIVED\",\r\n\r\n    GET_PRODUCT_REQUEST = \"GET_PRODUCT_REQUEST\",\r\n    GET_PRODUCT_RECEIVED = \"GET_PRODUCT_RECEIVED\",\r\n\r\n\r\n    GET_PENDING_OR_SUCCESSFUL_BIDS_REQUEST = \"GET_PENDING_OR_SUCCESSFUL_BIDS_REQUEST\",\r\n    GET_PENDING_OR_SUCCESSFUL_BIDS_RECEIVED = \"GET_PENDING_OR_SUCCESSFUL_BIDS_RECEIVED\",\r\n\r\n    CREATE_PRODUCT_REQUEST = \"CREATE_PRODUCT_REQUEST\",\r\n    CREATE_PRODUCT_RECEIVED = \"CREATE_PRODUCT_RECEIVED\",\r\n\r\n    DELETE_PRODUCT_REQUEST = \"DELETE_PRODUCT_REQUEST\",\r\n    DELETE_PRODUCT_RECEIVED = \"DELETE_PRODUCT_RECEIVED\",\r\n\r\n    UPDATE_PRODUCT_REQUEST = \"UPDATE_PRODUCT_REQUEST\",\r\n    UPDATE_PRODUCT_RECEIVED = \"UPDATE_PRODUCT_RECEIVED\",\r\n\r\n    LOGIN_REQUEST = \"LOGIN_REQUEST\",\r\n    LOGIN_SUCCESS = \"LOGIN_SUCCESS\",\r\n    LOGIN_FAILED = \"LOGIN_FAILED\",\r\n\r\n    LOGOUT = \"LOGOUT\",\r\n    LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\",\r\n\r\n    HTTP_UPDATE_SUCCESS = \"HTTP_UPDATE_SUCCESS\",\r\n    HTTP_READ_SUCCESS = \"HTTP_READ_SUCCESS\",\r\n    HTTP_CREATE_SUCCESS = \"HTTP_CREATE_SUCCESS\",\r\n    HTTP_DELETE_SUCCESS = \"HTTP_DELETE_SUCCESS\",\r\n\r\n    HTTP_UPDATE_ORDER_SUCCESS = \"HTTP_UPDATE_ORDER_SUCCESS\"\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Action } from \"redux\";\r\nimport { ApiError } from \"../../models/ApiError\";\r\nimport { ErrorCollection } from \"../../models/ErrorCollection\";\r\nimport { ACTIONS } from \"../actionEnums\";\r\n\r\nexport interface IErrorAction extends Action {\r\n    type: string;\r\n    error: ApiError | Error | ErrorCollection | null;\r\n}\r\n \r\nexport function errorAction(type: string, error: ApiError | Error | ErrorCollection): IErrorAction {\r\n    return {\r\n        type: type,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport function cleanErrors(): IErrorAction {\r\n    return {\r\n        type: ACTIONS.CLEAR_ERROR,\r\n        error: null\r\n    }\r\n}","import { AuthVM } from \"../models/AuthVM\";\r\n\r\nexport class UtilService {\r\n\r\n    static getAuthHeader(): Headers | undefined {\r\n        try {\r\n            const authVM: AuthVM = JSON.parse(localStorage.getItem(\"authVM\") as string);\r\n            let jwt: string = authVM.jwt;\r\n            let header = new Headers();\r\n            header.append(\"Authorization\", `Bearer ${jwt}`);\r\n            header.append(\"Content-Type\", \"application/json\");\r\n           \r\n            return header;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    static getJWT(): string {\r\n        if (!localStorage.getItem(\"authVM\") ) {\r\n           return \"\";\r\n        }\r\n        const authVM: AuthVM = JSON.parse(localStorage.getItem(\"authVM\") as string);\r\n        let jwt: string = authVM.jwt;\r\n        return `Bearer ${jwt}`;\r\n    }\r\n\r\n    static getApiUrl(): string {\r\n        let connectiontype: \"localhost\" | \"azure\" = \"localhost\";\r\n        const localhost: string = \"https://localhost:44397/api/\";\r\n        const azure: string = \"https://bulkapi20201108130318.azurewebsites.net/api/\";\r\n\r\n        if (connectiontype === \"localhost\") {\r\n            return localhost;\r\n        } else if (connectiontype === \"azure\") {\r\n            return azure;\r\n        } \r\n\r\n        throw new Error(\"connectionType does not match\");\r\n    }\r\n}","import { ACTIONS } from \"../actionEnums\";\r\nimport { ThunkDispatch, ThunkAction } from 'redux-thunk';\r\nimport { DiscountScheme } from \"../../models/DiscountScheme\";\r\nimport { Action } from \"redux\";\r\nimport { IErrorAction, errorAction } from \"../actions/errorAction\";\r\nimport { ApiError } from \"../../models/ApiError\";\r\nimport { UtilService } from \"../../services/UtilService\";\r\n\r\nexport interface IDiscountSchemeAction extends Action {\r\n    type: string;\r\n    discountSchemes?: DiscountScheme[] | null;\r\n    discountScheme?: DiscountScheme | null;\r\n    message?: string;\r\n    httpMessage?: string;\r\n}\r\n\r\n\r\nexport function getAllDiscountSchemesWithBidsAsync(): ThunkAction<Promise<void>, {}, {}, IDiscountSchemeAction | IErrorAction> {\r\n    return async (dispatch: ThunkDispatch<{}, {}, IDiscountSchemeAction | IErrorAction> ) => {\r\n        console.log(\"JWT\", UtilService.getJWT());\r\n        dispatch({ type: ACTIONS.GET_DISCOUNTSCHEMES_REQUEST, message: \"GET DiscountSchemes...\"});\r\n        try {            \r\n            \r\n            const response: Response = await fetch(UtilService.getApiUrl() + \"discountSchemes\", {\r\n                headers: UtilService.getAuthHeader()\r\n            });\r\n\r\n            if (!response.ok) {\r\n                let apiError: ApiError = await response.json();\r\n                throw apiError;\r\n            }\r\n\r\n            const discountSchemes: DiscountScheme[] = await response.json();\r\n            dispatch({ type: ACTIONS.GET_DISCOUNTSCHEMES_RECEIVED, discountSchemes: discountSchemes, httpMessage: ACTIONS.HTTP_READ_SUCCESS });\r\n        } catch (error) {\r\n            dispatch(errorAction(ACTIONS.ERROR, error));\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport function getDiscountSchemeAsync(discountSchemeId: number): ThunkAction<Promise<void>, {}, {}, IDiscountSchemeAction | IErrorAction> {\r\n    return async (dispatch: ThunkDispatch<{}, {}, IDiscountSchemeAction | IErrorAction>) => {\r\n        dispatch({ type: ACTIONS.GET_DISCOUNTSCHEME_REQUEST, message: \"GET DiscountScheme with id: \" + discountSchemeId});\r\n        try {            \r\n            const response: Response = await fetch(UtilService.getApiUrl() + \"discountSchemes/\" + discountSchemeId, {\r\n                headers: UtilService.getAuthHeader()\r\n            });\r\n            \r\n            if (!response.ok) {\r\n                let apiError: ApiError = await response.json();\r\n                throw apiError;\r\n            }\r\n            \r\n            const discountScheme: DiscountScheme = await response.json();\r\n            dispatch({ type: ACTIONS.GET_DISCOUNTSCHEME_RECEIVED, discountScheme: discountScheme, httpMessage: ACTIONS.HTTP_READ_SUCCESS });\r\n        } catch(error) {\r\n            dispatch(errorAction(ACTIONS.ERROR, error));\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport function getDiscountSchemesWithBidOfProducer(producerId: number): ThunkAction<Promise<void>, {}, {}, IDiscountSchemeAction | IErrorAction> {\r\n    return async (dispatch: ThunkDispatch<{}, {}, IDiscountSchemeAction | IErrorAction>) => {\r\n        dispatch({ type: ACTIONS.GET_DISCOUNTSCHEME_OF_PRODUCER_REQUEST, message: \"GET DiscountScheme of producer id: \" + producerId });\r\n        try {\r\n            const response: Response = await fetch(UtilService.getApiUrl() + \"discountSchemes/producer/\" + producerId, {\r\n                headers: UtilService.getAuthHeader()\r\n            });\r\n\r\n            if (!response.ok) {\r\n                let apiError: ApiError = await response.json();\r\n                throw apiError;\r\n            }\r\n            const discountSchemes: DiscountScheme[] = await response.json();\r\n            dispatch({ type: ACTIONS.GET_DISCOUNTSCHEME_OF_PRODUCER_RECEIVED, discountSchemes: discountSchemes, httpMessage: ACTIONS.HTTP_READ_SUCCESS });\r\n\r\n        } catch(error) {\r\n            dispatch(errorAction(ACTIONS.ERROR, error));\r\n        }\r\n    }\r\n}\r\n\r\nexport function createDiscountSchemeAsync(discountScheme: DiscountScheme): ThunkAction<Promise<void>, {}, {}, IDiscountSchemeAction | IErrorAction> {\r\n    return async (dispatch: ThunkDispatch<{}, {}, IDiscountSchemeAction | IErrorAction>) => {\r\n        dispatch({ type: ACTIONS.CREATE_DISCOUNTSCHEME_REQUEST, message: \"Creating Discount Scheme\" });\r\n        try {\r\n            const response: Response = await fetch(UtilService.getApiUrl() + \"discountSchemes\", {\r\n                method: \"POST\",\r\n                headers: UtilService.getAuthHeader(),\r\n                body: JSON.stringify(discountScheme)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                let apiError: ApiError = await response.json();\r\n                throw apiError;\r\n            }\r\n            const createdDiscountScheme: DiscountScheme = await response.json();\r\n            dispatch({ type: ACTIONS.CREATE_DISCOUNTSCHEME_RECEIVED, discountScheme: createdDiscountScheme, httpMessage: ACTIONS.HTTP_CREATE_SUCCESS });\r\n\r\n        } catch(error) {\r\n            dispatch(errorAction(ACTIONS.ERROR, error));\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteDiscountSchemeAsync(discountSchemeId: number): ThunkAction<Promise<void>, {}, {}, IDiscountSchemeAction | IErrorAction> {\r\n    return async (dispatch: ThunkDispatch<{}, {}, IDiscountSchemeAction | IErrorAction>) => {\r\n        dispatch({ type: ACTIONS.DELETE_DISCOUNTSCHEME_REQUEST, message: \"Deleting Discount Scheme\" });\r\n        try {\r\n            const response: Response = await fetch(UtilService.getApiUrl() + \"discountSchemes/\" + discountSchemeId, {\r\n                method: \"DELETE\",\r\n                headers: UtilService.getAuthHeader()\r\n            });\r\n\r\n            if (!response.ok) {\r\n                let apiError: ApiError = await response.json();\r\n                throw apiError;\r\n            }\r\n            const deletedDiscountScheme: DiscountScheme = await response.json();\r\n            dispatch({ type: ACTIONS.DELETE_DISCOUNTSCHEME_RECEIVED, discountScheme: deletedDiscountScheme, httpMessage: ACTIONS.HTTP_DELETE_SUCCESS });\r\n\r\n        } catch(error) {\r\n            dispatch(errorAction(ACTIONS.ERROR, error));\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport { CardContent, Button, CardActions } from \"@material-ui/core\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n\r\ninterface IProp {\r\n    title: string,\r\n    paras: JSX.Element[] | JSX.Element, // e.g. [<p></p>, <p><p>]\r\n    actionTitle?: string,\r\n    action?: (val: any) => any;\r\n}\r\n\r\nexport function CardComponent({title, paras, actionTitle, action}: IProp) {\r\n    const classes = useStyles(); \r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.cardWidth}>\r\n                <CardActionArea onClick={action}>\r\n                    <CardMedia \r\n                        component=\"img\"\r\n                        height=\"140\"\r\n                        className={classes.cardHeight}\r\n                        image=\"e_commerce.png\"\r\n                        title=\"https://acowebs.com/impact-ecommerce-society/\"/>\r\n                </CardActionArea>\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {title}\r\n                    </Typography>\r\n                    {paras}\r\n                </CardContent>\r\n                { action != null &&\r\n                    <CardActions>                \r\n                        <Button size=\"medium\" color=\"primary\" onClick={action}>\r\n                            {actionTitle}\r\n                        </Button>\r\n                    </CardActions>  \r\n                }\r\n                  \r\n            </Card>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: \"#fff\"\r\n    },\r\n    cardWidth: {\r\n        maxWidth: 450,\r\n    },\r\n    cardHeight: {\r\n        height: 140,\r\n    },\r\n  })\r\n);","import React, { useEffect, useState } from \"react\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport { ApiError } from \"../../models/ApiError\";\r\nimport { errorAction } from \"../../store/actions/errorAction\";\r\nimport { ACTIONS } from \"../../store/actionEnums\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { ErrorCollection } from \"../../models/ErrorCollection\";\r\n\r\ninterface IProp {\r\n    autoHideDuration?: number;\r\n    error: ApiError | Error | ErrorCollection | null,\r\n    message: string\r\n}\r\n\r\n// Stateful component\r\n// Parent component does not need to hold the showAlert in its state\r\nexport function ErrorNotification({error, autoHideDuration=6000, message}: IProp): JSX.Element {\r\n    // API Errors received if any\r\n    // To display error notification\r\n    const dispatch: Dispatch<any> = useDispatch(); \r\n    const [openAlert, setOpenAlert] = useState<boolean>(false); \r\n    const handleCloseAlert = () => {\r\n        setOpenAlert(false);\r\n        const cleanUpErrorAction = errorAction(ACTIONS.CLEAR_ERROR, error as ApiError | Error | ErrorCollection );\r\n        dispatch(cleanUpErrorAction);\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if (error) {\r\n            setOpenAlert(true);\r\n        }\r\n    }, [error]);\r\n    return <Snackbar open={openAlert} autoHideDuration={autoHideDuration} onClose={handleCloseAlert}>\r\n    <Alert severity=\"error\" onClose={handleCloseAlert}>{message}</Alert>\r\n</Snackbar>\r\n}\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }","import React, { useEffect } from \"react\";\r\nimport { Dispatch } from \"redux\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllDiscountSchemesWithBidsAsync } from \"../store/thunks/discountSchemeThunk\";\r\nimport { DiscountScheme } from \"../models/DiscountScheme\"; \r\nimport { RootState } from \"../store/rootReducer\"; \r\nimport Grid from '@material-ui/core/Grid';\r\nimport { CardComponent } from \"../components/discountSchemePage/CardComponent\"; \r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { ApiError } from \"../models/ApiError\";\r\nimport { ErrorNotification } from \"../components/shared/ErrorNotification\";\r\n \r\nexport function DiscountSchemesPage(): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();  \r\n    const history = useHistory();   \r\n    const classes = useStyles();\r\n\r\n    let discountSchemes: DiscountScheme[] = useSelector((action: RootState) => action.discountSchemeReducer.discountSchemes as DiscountScheme[]) ?? []; \r\n    console.log(discountSchemes);\r\n\r\n    const error: ApiError = useSelector((action: RootState) => action.errorReducer.error as ApiError) ?? null;\r\n\r\n    useEffect(() => {\r\n        document.title = \"Products\"\r\n        let action = getAllDiscountSchemesWithBidsAsync();\r\n        dispatch(action)\r\n    }, []); \r\n\r\n    let cards: JSX.Element[] = []\r\n    for (let index = 0; index < discountSchemes.length; index ++ ) {\r\n        const ds = discountSchemes[index];\r\n\r\n        let dateString: string = \"\";\r\n        if (ds.expiryDate) {\r\n            let date: Date = new Date(ds.expiryDate.toString());\r\n            dateString = date.toDateString();\r\n        } \r\n\r\n        let title = ds.product?.name ?? \"\";\r\n        let currentBids: number = ds.bids\r\n            .filter(bid => !bid.isInCart)\r\n            .reduce((accum, bid) => accum + bid?.quantity, 0);\r\n\r\n        let textDict = {\r\n            \"Title\": title,\r\n            \"Discounted Price\": \"$\" + ds.discountedPrice,\r\n            \"Remaining Bids Needed\": ds.minOrderQnty - currentBids,\r\n            \"Expiry Date\": dateString\r\n        } \r\n\r\n        let paras: JSX.Element[] = [];\r\n        for (let [key, value] of Object.entries(textDict)) {\r\n            let para: JSX.Element = <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" align=\"left\" key={key}>\r\n                <b>{key}&nbsp;</b>{value} \r\n            </Typography>\r\n\r\n            if (key === \"Discounted Price\") {\r\n                para = <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" align=\"left\" key={key}>\r\n                <b>{key}&nbsp;</b> ${ds.discountedPrice} $<del>{ds.product?.originalPrice}</del>\r\n            </Typography>\r\n            }\r\n\r\n            paras.push(para)\r\n        }\r\n                 \r\n        const redirectToDiscountSchemeDetail = () => { history.push(\"/discountScheme/\" + ds.discountSchemeId) };\r\n\r\n        let card: JSX.Element = <Grid item xs={12} sm={4} lg={3} key={index}>\r\n            <CardComponent title={title} paras={paras} actionTitle={\"Add to Cart\"} action={redirectToDiscountSchemeDetail}/>\r\n        </Grid>\r\n        cards.push(card);\r\n    }  \r\n\r\n    return <div>\r\n        {discountSchemes.length > 0 &&\r\n            <Grid className={classes.fullWidth}\r\n                container\r\n                spacing={3}>\r\n                {cards}\r\n            </Grid>     \r\n        }\r\n        <ErrorNotification error={error} message=\"error fetching schemes\" />\r\n    </div>\r\n\r\n} \r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    typo: {\r\n       fontVariant: \"body2\",\r\n       color: \"textSecondary\",\r\n       component: \"p\",\r\n       align: \"left\"\r\n    },\r\n    fullWidth: {\r\n        width: \"100vw\",\r\n        margin: \"auto\",\r\n        paddingLeft: \"100px\",\r\n        paddingRight: \"100px\"\r\n    }\r\n  })\r\n);","import { Action } from \"redux\";\r\nimport { Bid } from \"../../models/Bid\";\r\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\r\nimport { ACTIONS } from \"../actionEnums\";\r\nimport { IErrorAction, errorAction } from \"../actions/errorAction\";\r\nimport { ApiError } from \"../../models/ApiError\";\r\nimport { UtilService } from \"../../services/UtilService\";\r\n\r\n\r\nexport interface IBidAction extends Action {\r\n    type: string;\r\n    bid?: Bid | undefined;\r\n    bids?: Bid[] | undefined;\r\n    message?: string; // All internal messages and for response messages received on GET request\r\n    // Messages for create, read, update and delete\r\n    // need to separate messages and responseMessages\r\n    // some components rely on successfuly update response, before sending another get request to get the latest list\r\n    // if not separate, there will be infinite loop when using useEffect(()=>{}, [messages])\r\n    httpMessage?: string // For API messages\r\n}\r\n\r\nexport function addBidToCartAsync(bid: Bid): ThunkAction<Promise<void>, {}, {}, IBidAction | IErrorAction> {\r\n    return async (dispatch: ThunkDispatch<{}, {}, IBidAction | IErrorAction>) => {\r\n        dispatch({ type: ACTIONS.ADD_BID_TO_CART_REQUEST, message: \"Making post request to add bid to cart ...\" });\r\n\r\n        try {\r\n            const response: Response = await fetch(UtilService.getApiUrl() + \"bids/addcart\", {\r\n                method: \"POST\",\r\n                headers: UtilService.getAuthHeader(),\r\n                body: JSON.stringify(bid)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                let apiError: ApiError = await response.json();\r\n                throw apiError;\r\n            }\r\n            \r\n            let createdBid: Bid = (await response.json());\r\n            dispatch({ type: ACTIONS.ADD_BID_TO_CART_RECEIVED, bid: createdBid, message: response.statusText,  httpMessage: ACTIONS.HTTP_CREATE_SUCCESS });\r\n        } catch(error) {\r\n            dispatch(errorAction(ACTIONS.ERROR, error));\r\n        }        \r\n        \r\n    }\r\n}\r\n\r\nexport function updateBidInCartAsync(bid: Bid): ThunkAction<Promise<void>, {}, {}, IBidAction | IErrorAction> {\r\n    return async (dispatch: ThunkDispatch<{}, {}, IBidAction | IErrorAction>) => {\r\n        console.log(\"in thunk. bid to update\", bid.bidId)\r\n        dispatch({ type: ACTIONS.UPDATE_BID_IN_CART_REQUEST, messages: \"Request to update bid in cart\" });\r\n\r\n        try {\r\n            const response: Response = await fetch(UtilService.getApiUrl() + \"bids/updatecart\", {\r\n                method: \"PUT\",\r\n                headers: UtilService.getAuthHeader(),\r\n                body: JSON.stringify(bid)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                let apiError: ApiError = await response.json();\r\n                throw apiError;\r\n            }\r\n            \r\n            let updatedBid: Bid = (await response.json());\r\n            dispatch({ type: ACTIONS.UPDATE_BID_IN_CART_RECEIVED, bid: updatedBid, message: response.statusText, httpMessage: ACTIONS.HTTP_UPDATE_SUCCESS });\r\n        } catch(error) {\r\n            dispatch(errorAction(ACTIONS.ERROR, error));\r\n        }        \r\n        \r\n    }\r\n}\r\n\r\nexport function getBidsOfCustomerInCartAsync(customerId: number) {\r\n    return async (dispatch: ThunkDispatch<{}, {}, IBidAction | IErrorAction>) => { \r\n        dispatch({ type: ACTIONS.GET_BIDSOFCUSTOMER_INCART_REQUEST, messages: \"Fetching bids in cart for customer \" + customerId});\r\n\r\n        try {\r\n            const response: Response = await fetch(UtilService.getApiUrl() + \"bids/cart/\" + customerId, {\r\n                headers: UtilService.getAuthHeader()\r\n            });\r\n\r\n            if (!response.ok) {\r\n                let apiError: ApiError = await response.json();\r\n                throw apiError;\r\n            }\r\n\r\n            const bids: Bid[] = await response.json();\r\n            dispatch({ type: ACTIONS.GET_BIDSOFCUSTOMER_INCART_RECEIVED, bids: bids, message: response.statusText, httpMessage: ACTIONS.HTTP_READ_SUCCESS });\r\n        } catch(error) {\r\n            dispatch(errorAction(ACTIONS.ERROR, error));\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteBidFromCartAsync(bidId: number) {\r\n    return async (dispatch: ThunkDispatch<{}, {}, IBidAction | IErrorAction>) => { \r\n        dispatch({ type: ACTIONS.DELETE_BID_IN_CART_REQUEST, messages: \"deleting bids in cart with bidId\" + bidId});\r\n\r\n        try {\r\n            const response: Response = await fetch(UtilService.getApiUrl() + \"bids/cart/\" + bidId, {\r\n                method: \"DELETE\",\r\n                headers: UtilService.getAuthHeader()\r\n            });\r\n\r\n            if (!response.ok) {\r\n                let apiError: ApiError = await response.json();\r\n                throw apiError;\r\n            }\r\n            \r\n            dispatch({ type: ACTIONS.DELETE_BID_IN_CART_RECEIVED, message: response.statusText, httpMessage: ACTIONS.HTTP_DELETE_SUCCESS });\r\n        } catch(error) {\r\n            dispatch(errorAction(ACTIONS.ERROR, error));\r\n        }\r\n    }\r\n}\r\n\r\nexport function orderBidsFromCart(bids: Bid[]) {\r\n    return async (dispatch: ThunkDispatch<{}, {}, IBidAction | IErrorAction>) => { \r\n        dispatch({ type: ACTIONS.ORDER_BIDS_IN_CART_REQUEST, messages: \"ordering bids in cart \" + bids.toString()});\r\n        try {\r\n            const response: Response = await fetch(UtilService.getApiUrl() + \"bids/cart/order\", {\r\n                method: \"PUT\",\r\n                headers: UtilService.getAuthHeader(),\r\n                body: JSON.stringify(bids)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                let apiError: ApiError = await response.json();\r\n                throw apiError;\r\n            }\r\n\r\n            dispatch({type: ACTIONS.ORDER_BIDS_IN_CART_RECEIVED, message: response.statusText, httpMessage: ACTIONS.HTTP_UPDATE_ORDER_SUCCESS })\r\n        } catch(error) {\r\n            dispatch(errorAction(ACTIONS.ERROR, error));\r\n        }\r\n    }\r\n}\r\n\r\nexport function getPendingOrSuccessfulBids(customerId: number) {\r\n    return async (dispatch: ThunkDispatch<{}, {}, IBidAction | IErrorAction>) => { \r\n        dispatch({ type: ACTIONS.GET_PENDING_OR_SUCCESSFUL_BIDS_REQUEST, messages: \"getting  PendingOrSuccessfulBids of customer \" + customerId});\r\n        try {\r\n            const response: Response = await fetch(UtilService.getApiUrl() + \"bids/orders/\" + 1, {\r\n                headers: UtilService.getAuthHeader()\r\n            });\r\n\r\n            if (!response.ok) {\r\n                let apiError: ApiError = await response.json();\r\n                throw apiError;\r\n            }\r\n\r\n            const bids: Bid[] = await response.json();\r\n            console.log(\"in thunk\", bids);\r\n\r\n            dispatch({type: ACTIONS.GET_PENDING_OR_SUCCESSFUL_BIDS_RECEIVED, bids: bids, message: response.statusText, httpMessage: ACTIONS.HTTP_READ_SUCCESS });\r\n        } catch(error) {\r\n            dispatch(errorAction(ACTIONS.ERROR, error));\r\n        }\r\n    }\r\n}","import MaterialTable from 'material-table';\r\nimport React from \"react\"; \r\n\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport UnfoldMore from \"@material-ui/icons/UnfoldMore\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n\r\nimport { Icons } from 'material-table';\r\nimport  { SvgIconTypeMap } from \"@material-ui/core/SvgIcon\";\r\nimport { OverridableComponent } from '@material-ui/core/OverridableComponent';\r\n\r\ninterface IProp {\r\n  title: string,\r\n  data: any[];\r\n  columnNames: any[];\r\n  accessors: string[];\r\n  handleChecked?: (rowIds: number[]) => any;\r\n  idColumnAccessorName?: string; //to hide the id column,\r\n  pageSize?: number;\r\n  actionIcon?: OverridableComponent<SvgIconTypeMap<{}, \"svg\">>;\r\n  enableSearch?: boolean;\r\n  enablePaging?: boolean;\r\n  enableSelection?: boolean;\r\n  actionMessage?: string;\r\n  detailPanelFieldName?: string; //To render the detail panel\r\n  enabledDetailPanel?: boolean;\r\n}\r\n\r\n \r\nexport function DataTable({title, data, columnNames, accessors, handleChecked=defaultHandleChecked, idColumnAccessorName=\"\", pageSize=10, actionIcon,\r\n  enablePaging=false, enableSearch=false, actionMessage=\"Action\", enableSelection=false, detailPanelFieldName=\"\", enabledDetailPanel=false  }: IProp): JSX.Element {\r\n\r\n  let headerDicts: any[] = [];\r\n    for(let i = 0; i < columnNames.length; i++) {\r\n        let header: string = columnNames[i];\r\n        let accessor: string = accessors[i];    \r\n        let headerDict: any = {\r\n            \"title\": header,\r\n            \"field\": accessor,\r\n            \"hidden\": accessor === idColumnAccessorName\r\n        }; \r\n        headerDicts.push(headerDict);\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <div> \r\n        <MaterialTable        \r\n          icons={tableIcons}\r\n            title={title}\r\n            columns={headerDicts}\r\n            data={data}        \r\n            options={{\r\n              selection: enableSelection,\r\n              pageSize: pageSize,\r\n              search: enableSearch,\r\n              paging: enablePaging,\r\n              rowStyle:{\r\n                height: \"100px\"\r\n              },            \r\n            }}\r\n            detailPanel={[\r\n              rowData => ({\r\n                disabled: !enabledDetailPanel,\r\n                icon: () => <ChevronRight className={enabledDetailPanel ? classes.display : classes.displayNone } />,\r\n                render: () => returnDetailTable(rowData, detailPanelFieldName)\r\n              })\r\n            ]}\r\n            //rowData => returnDetailTable(rowData, detailPanelFieldName)\r\n            \r\n      />\r\n      </div>\r\n    )\r\n}\r\n\r\n  // There is a bug with Material Table where the table is fully rerendered on parent state update since 1.53.0\r\n  // https://github.com/mbrn/material-table/issues/1265 \r\nfunction returnDetailTable(rowData: any, detailPanelFielddName: string): JSX.Element {\r\n  console.log(rowData);\r\n  return rowData[detailPanelFielddName] as JSX.Element;\r\n}\r\n\r\nconst defaultHandleChecked = (val?: any) => {};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    displayNone: {\r\n      display: 'none'      \r\n    },\r\n    display: {\r\n      display: \"initial\"\r\n    }\r\n  }),\r\n);\r\n  \r\nconst tableIcons = {\r\n  Add: forwardRef<any, Icons>((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef<any, Icons>((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef<any, Icons>((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef<any, Icons>((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef<any, Icons>((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef<any, Icons>((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef<any, Icons>((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef<any, Icons>((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef<any, Icons>((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef<any, Icons>((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef<any, Icons>((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef<any, Icons>((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef<any, Icons>((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef<any, Icons>((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef<any, Icons>((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef<any, Icons>((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef<any, Icons>((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n  AddShoppingCartIcon: forwardRef<any, Icons>((props, ref) => <AddShoppingCartIcon {...props} ref={ref} />)\r\n};","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\ninterface IProp {\r\n    quantity: number; // quantity is part of useState(0)\r\n    setQuantity: (num: number) => any;  // setQuantity is part of useState(0)\r\n    size?: \"small\" | \"medium\" | \"large\"\r\n    align?: \"alignLeft\" | \"alignCenter\" | \"alignRight\"\r\n}\r\n\r\nexport function CartButtons({quantity, setQuantity, size=\"medium\", align=\"alignLeft\"}: IProp): JSX.Element {\r\n    const classes: Record<string, any> = useStyles();\r\n\r\n    const handleIncrement = () => {\r\n        setQuantity(quantity + 1);\r\n    }\r\n\r\n    const handleDecrement  = () => {\r\n        let newQuantity = quantity - 1\r\n        if (newQuantity < 1)\r\n            return;\r\n        setQuantity(quantity - 1);\r\n    }\r\n\r\n    return <div className={classes[align]}>\r\n        <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\" size={size}>\r\n            <Button onClick={handleIncrement}><AddIcon/></Button>\r\n            <Button>{quantity}</Button>\r\n            <Button onClick={handleDecrement}><RemoveIcon /></Button>\r\n        </ButtonGroup>\r\n    </div>\r\n\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    alignLeft: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'left',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      }\r\n    }, \r\n    alignCenter: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      }\r\n    },\r\n    alignRight: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'right',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      }\r\n    }\r\n  }),\r\n);\r\n ","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\r\n\r\ninterface IProps { \r\n    open: boolean;  // useState(true)\r\n    setOpen: (val: boolean) => void;    //useState(true)\r\n    message: string | JSX.Element;\r\n    severity: \"error\" | \"warning\" | \"info\" | \"success\",\r\n    cleanUp?: () => any;    // callback function when notification closes;\r\n    autoHideDuration?: number;\r\n}\r\n\r\nexport function SnackbarComponent({open, setOpen, message, severity, cleanUp, autoHideDuration=6000}: IProps): JSX.Element {\r\n\r\n    const handleClose = (reason: string) => { \r\n        setOpen(false); \r\n        if (cleanUp) {\r\n            cleanUp();\r\n        }\r\n    }; \r\n    \r\n    return <Snackbar open={open} autoHideDuration={autoHideDuration} onClose={() => handleClose(\"clickaway\")}>\r\n        <Alert onClose={() => handleClose(\"clickaway\")} severity={severity} >\r\n            {message}\r\n        </Alert>\r\n    </Snackbar>\r\n}\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n","import React from \"react\";\r\nimport { Bid } from \"../../models/Bid\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button } from \"@material-ui/core\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\ninterface IProp {\r\n    bids: Bid[];\r\n    rowIds: number[];\r\n    handleOrder: () => void\r\n}\r\n\r\nexport function OrderCheckoutComponent({bids, rowIds, handleOrder}: IProp) {\r\n\r\n    console.log(\"in orderCheckOut\", bids);\r\n\r\n    const selectedBids: Bid[] = bids.filter(bid =>  rowIds.includes(bid.bidId));\r\n\r\n    const totalDeliveryCharge = selectedBids.map(bid => {\r\n        const addressBidCountDict = bid.addressBidCountDict as Record<string, number>;   // { collectionAddress: number of bids} \r\n        const numBidsAtAddress: number = addressBidCountDict[bid.collectionAddress];\r\n        const deliveryCharge: number = bid?.discountScheme?.deliveryCharge ?? 0;\r\n        const avgDeliveryCharge: number = (!numBidsAtAddress) ? deliveryCharge : deliveryCharge / numBidsAtAddress;\r\n        return avgDeliveryCharge\r\n    }).reduce((accum, charge) => accum + charge, 0);\r\n\r\n    let totalPrice: number = selectedBids\r\n        .reduce((accum, bid) => accum + bid.quantity * (bid.discountScheme?.discountedPrice ?? 0), 0);\r\n\r\n    const totalQuantity: number = selectedBids\r\n        .reduce((accum, bid) => accum + bid.quantity ?? 0, 0);\r\n\r\n    \r\n    \r\n    return <Paper>\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={3}></Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant={\"body1\"} align={\"center\"} color=\"textSecondary\" paragraph={true}><b>Total Quantity: </b>{totalQuantity}</Typography>\r\n                <Typography variant={\"body1\"} align={\"center\"} color=\"textSecondary\" paragraph={true}><b>Total Price: </b>${totalPrice}</Typography>\r\n                <Typography variant={\"body1\"} align={\"center\"} color=\"textSecondary\" paragraph={true}><b>Total Delivery Charge: </b>${totalDeliveryCharge}</Typography>\r\n                <Typography variant={\"body1\"} align={\"center\"} color=\"secondary\" paragraph={true}><b>Grand Total: </b>${totalDeliveryCharge + totalQuantity}</Typography>\r\n            </Grid>\r\n            <Grid item xs={3} alignContent=\"flex-end\">\r\n                <Button color=\"secondary\" size=\"large\" variant=\"contained\" onClick={handleOrder} disabled={selectedBids.length < 1}>Order Bids</Button>\r\n            </Grid>        \r\n        </Grid> \r\n    </Paper>\r\n    \r\n}","export class SelectListItem {\r\n    disabled: boolean = false;\r\n    selected: boolean = false;\r\n    text: string = \"\";\r\n    value: any;\r\n\r\n\r\n    constructor(text = \"\", value: any) {\r\n        this.text = text;\r\n        this.value = value;\r\n    }\r\n}","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { SelectListItem } from \"../../models/SelectListItem\";\r\nimport { Control, Controller, DeepMap, FieldError } from \"react-hook-form\";\r\nimport { FormHelperText } from \"@material-ui/core\";\r\n\r\ninterface IPropUncontrolled {\r\n    title: string;\r\n    name: string,\r\n    selectListItems: SelectListItem[] // Record<text, value>,\r\n    errorMessage?: string,\r\n    defaultValue?: string,\r\n    formHelperText?: string\r\n    control: Control<Record<string, any>>,\r\n    errors: DeepMap<Record<string, any>, FieldError>,\r\n    rules: object\r\n}\r\n\r\n// For Select field used in React Hook Forms. React Hook forms are uncontrolled, i.e. no state\r\n// The data for each input element is stored in the DOM, not in the component. \r\n// React hook forms library uses a ref behind the scenes to retrieve the data\r\nexport function SelectUncontrolledComponent({title, selectListItems,\r\n  name, errorMessage=\"\", defaultValue=\"\", control, errors, rules}: IPropUncontrolled): JSX.Element {\r\n\r\n  let isError = errors[name] != null ? true : false;\r\n\r\n  return  <Controller\r\n    name={name}\r\n    defaultValue={defaultValue}\r\n    control={control}\r\n    rules={rules}\r\n    render={props => <SelectControlledComponent title={title} state={props.value} selectListItems={selectListItems} \r\n      handleChange={props.onChange} formHelperText={errorMessage} isError={isError} {...props} />  \r\n    } />\r\n}\r\n\r\ninterface IPropControlled {\r\n  title: string;\r\n  state: any;\r\n  selectListItems: SelectListItem[] // Record<text, value>\r\n  handleChange: (event: React.ChangeEvent<any>) => any | void;\r\n  isError?: boolean;\r\n  formHelperText?: string\r\n}\r\n  \r\n// For controlled forms\r\n// In a controlled component, the form data is handled by the state within the component.\r\nexport function SelectControlledComponent({title, state, selectListItems, handleChange, isError=false, formHelperText=\"\"}: IPropControlled): JSX.Element {\r\n    const classes = useStyles();\r\n\r\n    return  <FormControl className={classes.formControl} error={isError}>\r\n          <InputLabel id=\"demo-simple-select-label\">{title}</InputLabel>\r\n          <Select labelId=\"demo-simple-select-label\"\r\n              autoWidth={true}\r\n              value={state}\r\n              onChange={event => handleChange(event)} > \r\n              <MenuItem value={undefined} divider>\r\n                  <em>None</em>\r\n              </MenuItem>\r\n              {\r\n                selectListItems.map((selectListItem, index) => <MenuItem key={index} value={selectListItem.value}>{selectListItem.text}</MenuItem>)\r\n              }\r\n          </Select>\r\n          { isError &&\r\n            <FormHelperText>{formHelperText}</FormHelperText>\r\n          }\r\n          \r\n    </FormControl>\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      //margin: theme.spacing(1),\r\n      minWidth: 150,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }),\r\n);","import React from \"react\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\ninterface IProp {\r\n    textDict: Record<string, any>\r\n    color?: \"inherit\" | \"initial\" | \"textSecondary\" | \"primary\" | \"secondary\" | \"textPrimary\" | \"error\" | undefined\r\n}\r\n\r\nexport function TextComponent({textDict, color=\"textSecondary\"}: IProp): JSX.Element {\r\n    console.log(textDict);\r\n    let paras: JSX.Element[] = [];\r\n    for (let [key, value] of Object.entries(textDict)) {\r\n        let para: JSX.Element = <Typography variant=\"body2\" color={color} component=\"p\" align=\"left\" key={key}>\r\n            <b>{key}&nbsp;</b>{value} \r\n        </Typography>\r\n        paras.push(para)\r\n    }\r\n\r\n    return <Container>\r\n        {paras}\r\n    </Container>\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Bid } from \"../models/Bid\";\r\nimport { RootState } from \"../store/rootReducer\";\r\nimport { deleteBidFromCartAsync, getBidsOfCustomerInCartAsync, orderBidsFromCart, updateBidInCartAsync } from \"../store/thunks/bidThunk\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Dispatch } from \"redux\"; \r\nimport { DataTable } from \"../components/shared/DataTable\";\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport { CartButtons } from \"../components/shared/CartButtons\";\r\nimport { SnackbarComponent } from \"../components/shared/SnackbarComponent\";\r\nimport { Button, Container } from \"@material-ui/core\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { OrderCheckoutComponent } from \"../components/cartPage/OrderCheckoutComponent\";\r\nimport { ACTIONS } from \"../store/actionEnums\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { SelectListItem } from \"../models/SelectListItem\";\r\nimport { SelectControlledComponent } from \"../components/shared/SelectComponents\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextComponent } from \"../components/shared/TextComponent\";\r\nimport { cloneDeep } from \"lodash\";\r\n\r\nclass Row {\r\n    bidId: number | undefined;\r\n    checkbox: JSX.Element | undefined;\r\n    name: string | undefined;\r\n    discountedPrice: string | undefined;\r\n    updateCartComponent: JSX.Element | undefined;    \r\n    collectionAddress: JSX.Element | undefined;\r\n    deliveryCharge: JSX.Element | undefined;\r\n    deleteButton: JSX.Element | undefined;\r\n    detailPanel: JSX.Element | undefined;\r\n}\r\n\r\nexport function CartPage(): JSX.Element {\r\n    const history = useHistory();          \r\n    const dispatch: Dispatch<any> = useDispatch(); \r\n\r\n    // State to determine whether to show notification\r\n    const [open, setOpen] = useState(false);\r\n    const [notificationMessage, setNotificationMessage] = useState(\"\");\r\n    const handleNotification = (isOpen: boolean, message: string) => {\r\n        setOpen(isOpen);\r\n        setNotificationMessage(message);\r\n    }    \r\n\r\n    // The Bids received from the GET request\r\n    const bidsInCart: Bid[] = useSelector((action: RootState) => action.bidReducer.bids as Bid[] ) ?? [];  \r\n    const [bids, setBids] = useState<Bid[]>([]);\r\n    useEffect(() => {\r\n        setBids(cloneDeep(bidsInCart));\r\n    }, [bidsInCart.length])\r\n    console.log(\"bids received\", bidsInCart);\r\n\r\n    // For some reason, useState(bidsInCart.map(bid => bid.quantity)) will produce only an empty array\r\n    // React hooks are always one step behind. On next render, the state variable will have a new value.\r\n    useEffect(() => {\r\n        document.title = \"Cart\";\r\n        const customerId = 1;\r\n        const action = getBidsOfCustomerInCartAsync(customerId);\r\n        dispatch(action);        \r\n    }, []); \r\n\r\n    // When the user selects the row (Bid) in the datatable\r\n    const [selectedRowBidIds, setSelectedRowBidIds] = useState<number[]>([]);\r\n    const handleOrder = () => {\r\n        let bidsToOrder: Bid[] = bids.filter(bid => selectedRowBidIds.includes(bid.bidId));\r\n        const action = orderBidsFromCart(bidsToOrder);\r\n        dispatch(action);\r\n    };\r\n\r\n    //Response on update. If update is successful, make another request to get bids in cart\r\n    const apiMessage: string = useSelector( (action: RootState) => action.bidReducer.httpMessage as string ) ?? \"\"; \r\n    useEffect(() => {\r\n        // if user successful update quantity or remove from cart, refresh page\r\n        if (apiMessage.includes(ACTIONS.HTTP_UPDATE_SUCCESS) || apiMessage.includes(ACTIONS.HTTP_DELETE_SUCCESS)) {\r\n            const customerId = 1;\r\n            // const action = getBidsOfCustomerInCartAsync(customerId);\r\n            //dispatch(action); \r\n        }\r\n        // if user successfully makes an order, redirect to orders page\r\n        if (apiMessage.includes(ACTIONS.HTTP_UPDATE_ORDER_SUCCESS)) {\r\n            console.log(apiMessage);\r\n            history.push(\"/orders\");\r\n        }\r\n    }, [apiMessage]);\r\n\r\n    // Convert the Bids to Rows to pass to the DataTable\r\n    const rows: Row[] = bids.map(bid => createRowFromBid(bid));    \r\n\r\n    // To add React components to each row\r\n    for (let i = 0; i < bids.length; i++) {\r\n        let bid: Bid = bids[i];       \r\n        const quantity: number = bid.quantity as number;\r\n\r\n        // Method reference to POST updated id to pass into CartButtons\r\n        const handleUpdateCart = (newQuantity: number, collectionAddress: string) => {\r\n            let bidsCopy: Bid[] = cloneDeep(bidsInCart);    \r\n            let bidCopy = bidsCopy[i];\r\n            bidCopy.quantity = newQuantity;\r\n            bidCopy.collectionAddress = collectionAddress;\r\n            setBids(bidsCopy);\r\n            const updateAction = updateBidInCartAsync(bidCopy);\r\n            dispatch(updateAction);\r\n            handleNotification(true, \"bid added to cart\"); \r\n        }\r\n\r\n        // Method reference to set quantity to pass into CartButtons\r\n        const handleChangeQuantity = (newQuantity: number) => {\r\n            handleUpdateCart(newQuantity, bid.collectionAddress);            \r\n        };\r\n\r\n        const handleChangeAddress = (event: React.ChangeEvent<any>) => {\r\n            let selectedAddress: string = event.target.value;\r\n            handleUpdateCart(bid.quantity, selectedAddress);\r\n        }\r\n\r\n        const toggleCheckedRowId = () => {\r\n            const bidId: number = bid.bidId;\r\n            if (!selectedRowBidIds.includes(bidId)) {\r\n                setSelectedRowBidIds([...selectedRowBidIds, bidId])\r\n            } else {\r\n                let newSelectedRowIds: number[] = selectedRowBidIds.filter(id => id !== bidId);\r\n                setSelectedRowBidIds(newSelectedRowIds);\r\n            }\r\n        }\r\n\r\n        const deleteBid = () => {\r\n            const bidId: number = bid.bidId;\r\n            const deleteAction = deleteBidFromCartAsync(bidId);            \r\n            dispatch(deleteAction);\r\n            handleNotification(true, \"item deleted\");\r\n            let newBids = cloneDeep(bids).filter((bid, index) => index != i);\r\n            console.log(bids, newBids);\r\n            setBids(newBids);\r\n        } \r\n\r\n        let dateString = \"\";\r\n        if (bid.discountScheme?.expiryDate) {\r\n            let date: Date = new Date(bid.discountScheme.expiryDate.toString());\r\n            dateString = date.toDateString();        \r\n        }\r\n\r\n        rows[i].updateCartComponent = <CartButtons quantity={quantity} setQuantity={handleChangeQuantity} size={\"small\"}/>\r\n        rows[i].checkbox = <Checkbox size=\"small\" onChange={toggleCheckedRowId} />\r\n        rows[i].deleteButton = <Button size={\"small\"} variant={\"contained\"} color={\"primary\"} onClick={deleteBid}>Delete</Button>\r\n\r\n        // Collection Address\r\n        const addressBidCountDict = bid.addressBidCountDict as Record<string, number>;   // { collectionAddress: number of bids} \r\n        const selectListItems: SelectListItem[] = [];\r\n        for (let address in addressBidCountDict) {\r\n            let selectListItem: SelectListItem = new SelectListItem(address, address);\r\n            selectListItem.selected = bid.collectionAddress === address;\r\n            selectListItems.push(selectListItem);\r\n        }        \r\n        rows[i].collectionAddress = <SelectControlledComponent title={\"Delivery\"} state={bid.collectionAddress + \"\"} \r\n            selectListItems={selectListItems} handleChange={handleChangeAddress} />\r\n\r\n        // Detail Panel\r\n        let descriptionDict: Record<string, any> = {\r\n            \"Description\": bid.discountScheme?.product?.description,\r\n            \"Bid Expiry Date\": dateString\r\n        }  \r\n\r\n        let quantityDict: Record<string, any> = {\r\n            \"Min Order Quantity\": bid.discountScheme?.minOrderQnty,\r\n            \"Current total bids\": bid.currentTotalBids,\r\n            \"Remaining bids required\": bid.discountScheme?.minOrderQnty as number - (bid.currentTotalBids as number)\r\n        }\r\n\r\n        let deliveryDict: Record<string, any> = {\r\n            \"Delivery Charge\": \"$\" + bid.discountScheme?.deliveryCharge\r\n        }\r\n        rows[i].detailPanel = <Grid container>\r\n            <Grid item xs={4}>\r\n                <TextComponent textDict={descriptionDict}/>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <TextComponent textDict={quantityDict}/>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <TextComponent textDict={deliveryDict}/>\r\n            </Grid>\r\n        </Grid>\r\n        \r\n    }\r\n\r\n    let accessors: string[] = Object.keys(new Row());   // accessors allow the DataTable to access the properties of the Row object. \r\n    const detailPanelName: string = \"detailPanel\";  // Remove access to detailPanel property\r\n    accessors = accessors.filter(accessor => accessor !== detailPanelName);\r\n    const columnNames: any[] = [\"BidId\", \"Check Box\", \"Name\", \"Price per Item\", \"Quantity\", \"Collection Address\", \"Average Delivery Charge\", \"Remove\"];\r\n\r\n    return <Container maxWidth=\"xl\">\r\n        <OrderCheckoutComponent bids={bids} rowIds={selectedRowBidIds} handleOrder={handleOrder} />\r\n        <br/>\r\n        <DataTable data={rows} columnNames={columnNames} accessors={accessors} title=\"Cart\" \r\n            idColumnAccessorName={\"bidId\"}             \r\n            actionMessage=\"Make Order\"  actionIcon={AddShoppingCartIcon}  \r\n            enabledDetailPanel={true} detailPanelFieldName={detailPanelName} />\r\n        <SnackbarComponent open={open} setOpen={setOpen} message={notificationMessage} severity={\"success\"}/>        \r\n    </Container>\r\n}\r\n\r\n\r\nfunction createRowFromBid(bid: Bid): Row {   \r\n\r\n    let discountedPrice = bid.discountScheme?.discountedPrice as number;\r\n    let originalPrice = bid.discountScheme?.product?.originalPrice as number;\r\n\r\n    let row: Row = new Row();\r\n    row.bidId = bid.bidId;\r\n    row.discountedPrice = `$${discountedPrice} (Save $${originalPrice - discountedPrice})`;\r\n    row.name = bid.discountScheme?.product?.name;\r\n\r\n    const addressBidCountDict = bid.addressBidCountDict as Record<string, number>; \r\n    const numBidsAtAddress: number = addressBidCountDict[bid.collectionAddress];\r\n    const deliveryCharge: number = bid?.discountScheme?.deliveryCharge ?? 0;\r\n    const avgDeliveryCharge: number = (!numBidsAtAddress) ? deliveryCharge : deliveryCharge / (numBidsAtAddress + 1);\r\n    row.deliveryCharge = <Grid container>\r\n        <Grid item xs={6}>\r\n            <span>{`$${avgDeliveryCharge}`}</span>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n            <span style={{borderBottom:\"1px solid black\", display:\"block\", fontSize:\"12px\"}}>${deliveryCharge}</span>\r\n            <span style={{fontSize:\"12px\"}}>{numBidsAtAddress} other bids here</span>\r\n        </Grid>\r\n    </Grid>\r\n    \r\n    return row;\r\n}\r\n ","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Dispatch } from \"redux\"; \r\nimport { Bid } from \"../models/Bid\";\r\nimport { RootState } from \"../store/rootReducer\";\r\nimport { getPendingOrSuccessfulBids } from \"../store/thunks/bidThunk\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { DataTable } from \"../components/shared/DataTable\";\r\n\r\nclass Row {\r\n    name: string | undefined;\r\n    discountedPrice: string | undefined;\r\n    quantity: string | undefined;\r\n    deliveryCharge: string | undefined;\r\n    collectionAddress: string | undefined;\r\n    remainingBidsRequired: number | undefined;\r\n    bidExpiryDate: string | undefined;\r\n    bidStatus: \"SUCCESS\" | \"PENDING\" | \"FAILED\" | undefined\r\n};\r\n\r\nexport function OrdersPage(): JSX.Element {\r\n    document.title = \"Orders\";\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n\r\n    const bids: Bid[] = useSelector((action: RootState) => action.bidReducer.bids as Bid[] ) ?? [];\r\n\r\n    useEffect(() => {\r\n        const customerId: number = 1;\r\n        const action = getPendingOrSuccessfulBids(customerId);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const columnNames: string[] = [\"Name\", \"Discounted Price Per Item\", \"Quantity\", \"Delivery Charge\", \"Collection Address\", \"Remaining Bids Required\", \"Bid Expiry Date\", \"Bid Status\"];\r\n    const accessors: string[] = Object.keys(new Row());\r\n    const rows: Row[] = bids.map(bid => createRowFromBid(bid));\r\n\r\n     return <Container maxWidth=\"lg\">\r\n         <DataTable columnNames={columnNames} accessors={accessors} data={rows} title={\"Submitted Bids\"} enablePaging={true} pageSize={5} />\r\n     </Container>\r\n}\r\n\r\nfunction createRowFromBid(bid: Bid): Row {   \r\n\r\n    let discountedPrice: number = bid.discountScheme?.discountedPrice as number;\r\n    let originalPrice: number = bid.discountScheme?.product?.originalPrice as number;\r\n    let minOrderQnty: number = bid.discountScheme?.minOrderQnty as number;\r\n    let currentTotalBids: number = bid.currentTotalBids as number;\r\n    console.log(\"remainingBidsRequired\", minOrderQnty, currentTotalBids, minOrderQnty - currentTotalBids, \"bidId: \" + bid.bidId);\r\n\r\n    let row: Row = new Row();\r\n    row.quantity = bid.quantity + \"\";\r\n    row.collectionAddress = bid.collectionAddress;\r\n    row.discountedPrice = `$${discountedPrice} (Save $${originalPrice - discountedPrice})`;\r\n    row.deliveryCharge = \"$\" + bid.discountScheme?.deliveryCharge;\r\n    row.name = bid.discountScheme?.product?.name;\r\n    row.remainingBidsRequired = minOrderQnty - currentTotalBids;\r\n\r\n    let expiryDate: Date = new Date(bid.discountScheme?.expiryDate as Date);    //json return date as strings\r\n    row.bidExpiryDate = expiryDate.toDateString();\r\n\r\n    if (bid.bidSuccessDate != null) {\r\n        row.bidStatus = \"SUCCESS\";        \r\n    } else if (new Date() > expiryDate) {\r\n        row.bidStatus = \"FAILED\";\r\n    } else {\r\n        row.bidStatus = \"PENDING\";\r\n    }\r\n    \r\n    return row;\r\n}\r\n ","import { Product } from \"./Product\";\r\nimport { Bid } from \"./Bid\";\r\n\r\nexport class DiscountScheme {\r\n    discountSchemeId: number = 0;\r\n    minOrderQnty: number = 0;\r\n    discountedPrice: number = 0;\r\n    expiryDate: Date | null = null;\r\n    deliveryCharge: number = 0;\r\n\r\n    productId: number = 0;\r\n    product: Product | null = null;\r\n    bids: Bid[] = [];\r\n\r\n    //Properties of ViewModel\r\n    addressBidCountDict?: Record<string, number> = {}\r\n\r\n}","import { DiscountScheme } from \"./DiscountScheme\";\r\n\r\nexport class Product {\r\n    productId: number = 0;\r\n    name: string = \"\";\r\n    category: string = \"\";\r\n    description: string = \"\";\r\n    originalPrice: number = 0;\r\n    producerId: number = 0;\r\n\r\n    discountSchemes: DiscountScheme[] = [];\r\n\r\n}","import React from \"react\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Button } from \"@material-ui/core\";\r\nimport CardMedia from '@material-ui/core/CardMedia'; \r\nimport imageUrl  from  \"../../images/e_commerce.png\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\n\r\ninterface IProps {\r\n    open: boolean;  //open is part of useState(false)\r\n    toggleOpen: () => void; //toggleOpen is part of useState(false)\r\n    title?: string;\r\n    showPicture?: boolean;\r\n    content?: JSX.Element;  // paragraphs to display, e.g. [<p></p>, <p></p>]\r\n    actionTitle?: string,   //title of button\r\n    action?: (arg?: any) => any; //callback function on button click\r\n    secondaryActionTitle?: string,\r\n    secondaryAction?: (arg?: any) => any;\r\n}\r\n\r\nexport function DialogComponent({open, toggleOpen, title, content, actionTitle, action, showPicture=false, secondaryActionTitle, secondaryAction}: IProps): JSX.Element {\r\n\r\n    return <Dialog open={open} onClose={toggleOpen} aria-labelledby=\"form-dialog-title\" maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\r\n            <DialogContent>\r\n                { showPicture &&\r\n                    <CardMedia \r\n                        component=\"img\"\r\n                        \r\n                        //height=\"140\"\r\n                        image={imageUrl}\r\n                        title=\"https://acowebs.com/impact-ecommerce-society/\"/>\r\n                } \r\n                <br/>               \r\n                {content}                \r\n            </DialogContent>\r\n\r\n            <Container>\r\n                <Grid container spacing={0}>\r\n                    <Grid item xs={8}></Grid>\r\n                    <Grid item xs={4}>\r\n                    {actionTitle &&\r\n                        <DialogActions>\r\n                            <Button onClick={action} color=\"primary\" variant=\"outlined\">\r\n                                {actionTitle}\r\n                            </Button>\r\n                        </DialogActions>\r\n                    } \r\n                    </Grid>\r\n                </Grid>                       \r\n\r\n                <Grid container spacing={0}>\r\n                    <Grid item xs={4}>\r\n                    {secondaryActionTitle &&\r\n                        <DialogActions>\r\n                            <Button onClick={secondaryAction as () => {}} color=\"secondary\" variant=\"outlined\">\r\n                                {secondaryActionTitle}\r\n                            </Button>\r\n                        </DialogActions>\r\n                    }  \r\n                    </Grid>\r\n                    <Grid item xs={4}></Grid>\r\n                    <Grid item xs={4}>\r\n                        <DialogActions>                \r\n                            <Button onClick={toggleOpen} color=\"primary\" variant=\"outlined\">\r\n                                Close\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n            \r\n            \r\n            \r\n    </Dialog>\r\n\r\n}\r\n","import { Container, Grid } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Dispatch } from \"redux\"; \r\nimport { DataTable } from \"../components/shared/DataTable\";\r\nimport { DiscountScheme } from \"../models/DiscountScheme\";\r\nimport { RootState } from \"../store/rootReducer\";\r\nimport { deleteDiscountSchemeAsync, getDiscountSchemesWithBidOfProducer } from \"../store/thunks/discountSchemeThunk\";\r\nimport { cloneDeep, uniqBy } from \"lodash\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { SelectControlledComponent } from \"../components/shared/SelectComponents\";\r\nimport { SelectListItem } from \"../models/SelectListItem\";\r\nimport { Product } from \"../models/Product\";\r\nimport { DialogComponent } from \"../components/shared/DialogComponent\";\r\nimport { TextComponent } from \"../components/shared/TextComponent\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { ACTIONS } from \"../store/actionEnums\";\r\n\r\ntype Status = \"SUCCESS\" | \"PENDING\" | \"FAILED\" | undefined;\r\n\r\nclass Row {\r\n    name: JSX.Element | undefined;\r\n    discountedPrice: JSX.Element | undefined;\r\n    deliveryCharge: string | undefined = \"0\";\r\n    minOrderQnty: number | undefined = 0;\r\n    currentBids: number | undefined = 0;    \r\n    bidExpiryDate: string | undefined  = \"\";\r\n    bidStatus: Status;\r\n    delete: JSX.Element | undefined;\r\n}\r\n\r\nexport function ProducerDiscountSchemePage(): JSX.Element {\r\n\r\n    document.title = \"Schemes\";\r\n    const producerId: number = 2;\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const history = useHistory(); \r\n\r\n    // Single source of truth, avoid mutating it\r\n    const immutableDiscountSchemes: DiscountScheme[] = useSelector((action: RootState) => action.discountSchemeReducer.discountSchemes as DiscountScheme[]) ?? [];\r\n    useEffect(() => {\r\n        \r\n        const action = getDiscountSchemesWithBidOfProducer(producerId);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    // For the AutoComplete Filter\r\n    let products: Product[] = immutableDiscountSchemes.map(ds => ds.product ?? new Product());\r\n    products = uniqBy(products, (product) => product.name);    \r\n\r\n    // DiscountSchemes to dispaly to the data table, subject to filtering\r\n    const [discountSchemes, setDiscountSchemes] = useState<DiscountScheme[]>([]);\r\n    useEffect(() => {\r\n        console.log(immutableDiscountSchemes);\r\n        setDiscountSchemes(immutableDiscountSchemes);        \r\n    }, [immutableDiscountSchemes.length]);\r\n\r\n    const [status, setStatus] = useState<Status>();\r\n    const handleStatusChange = ((event: React.ChangeEvent<any>) => {\r\n        let selectedStatus: Status = event.target.value as Status;\r\n        setStatus(selectedStatus);\r\n    });\r\n\r\n    //Status filtering\r\n    const selectListItems: SelectListItem[] = [\"SUCCESS\", \"PENDING\", \"FAILED\"].map((status) => new SelectListItem(status, status));\r\n    \r\n    // Product name filtering\r\n    const [productName, setProductName] = useState<string>(\"\");\r\n    const handleChangeProductName = (name: string) => {\r\n        console.log(name);\r\n        setProductName(name);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let discountSchemesCopy: DiscountScheme[] = cloneDeep(immutableDiscountSchemes);\r\n        discountSchemesCopy = discountSchemesCopy\r\n            .filter(ds => status ? determineStatusOfScheme(ds) === status : true )\r\n            .filter(ds => productName ? ds.product?.name?.toLowerCase()?.includes(productName.toLowerCase()) : true)\r\n        setDiscountSchemes(discountSchemesCopy);\r\n    }, [status, productName]);\r\n\r\n    // To display the product as a dialog when user clicks on the link\r\n    const [openProductDialog, setOpenProductDialog] = useState<boolean>(false);\r\n    const [product, setProduct] = useState<Product>(new Product());\r\n    let productTextDict: Record<string, any> = {\r\n        \"Name\": product.name,\r\n        \"Original Price\": \"$\" + product.originalPrice,\r\n        \"Category\": product.category,\r\n        \"Description\": product.description        \r\n    }\r\n    let productTextComponent: JSX.Element = <TextComponent textDict={productTextDict} />\r\n\r\n    // To redirect user to create discount Scheme\r\n    const redirectToForm = () => history.push(\"/producer/discountSchemes/create\");   \r\n\r\n    // To create rows for the data table\r\n    const rows: Row[] = [];\r\n\r\n    // When user clicks delete in the opened product dialog, close it, then open another and confirm delete\r\n    const [openDeleteDialog, setOpenDeleteDialog] = useState<boolean>(false); \r\n    const [targetDiscountScheme, setTargetDiscountScheme] = useState<DiscountScheme>(new DiscountScheme());\r\n    const deleteProduct = () => {\r\n        if (targetDiscountScheme.bids.length > 0) {\r\n            return;\r\n        }\r\n        console.log(\"discountSchemeId\", targetDiscountScheme.discountSchemeId);\r\n        const deleteAction = deleteDiscountSchemeAsync(targetDiscountScheme.discountSchemeId);\r\n        dispatch(deleteAction);\r\n        setOpenDeleteDialog(false);\r\n    } \r\n\r\n    let httpResponseMessage: string = useSelector((action: RootState) => action.discountSchemeReducer.httpMessage as string) ?? \"\";\r\n    console.log(\"in ProductPage\", httpResponseMessage);\r\n    useEffect(() => {\r\n        if (httpResponseMessage.includes(ACTIONS.HTTP_DELETE_SUCCESS)) {\r\n            \r\n            const action = getDiscountSchemesWithBidOfProducer(producerId);\r\n            dispatch(action);\r\n        }\r\n    }, [httpResponseMessage]);\r\n\r\n    // Set the rows for the datatable\r\n    for (let ds of discountSchemes) {\r\n        let row: Row = createRowFromScheme(ds);\r\n        const onNameClick = () => {\r\n            let product: Product = discountSchemes\r\n                .map(ds => ds.product)\r\n                .find(product => product?.productId === ds.productId) ?? new Product();\r\n            setProduct(product);\r\n\r\n            setOpenProductDialog(!openProductDialog);\r\n        };\r\n        const onDeleteClick = () => {\r\n            setTargetDiscountScheme(ds);\r\n            setOpenDeleteDialog(true);\r\n        }\r\n\r\n        // Disallow deleting of schemes which have bids\r\n        const isDisableDelete: boolean = ds.bids.length > 0;\r\n        let tooltipMessage: string = isDisableDelete ? \"Cannot delete scheme as it has dependent bids\" : \"\";\r\n\r\n        row.name = <Button onClick={onNameClick} size=\"small\" variant=\"outlined\">{ds.product?.name}</Button> ;\r\n        row.delete = <div className=\"tooltip__div-visible\">\r\n            <Button size=\"small\" variant=\"outlined\" color=\"secondary\" disabled={isDisableDelete}\r\n                onClick={onDeleteClick}>Delete\r\n                    <span className=\"tooltiptext\">{tooltipMessage}</span>\r\n                </Button>\r\n        </div> ;\r\n        rows.push(row);\r\n    }\r\n\r\n    \r\n    const columnNames: string[] = [\"Name\", \"Discounted Price\", \"Delivery Charge\",  \"Min Order Qnty\", \"Current Bids\",\"Expiry Date\", \"Bid Status\", \"Delete\"];\r\n    const accessors: string[] = Object.keys(new Row());        \r\n\r\n    return <Container maxWidth=\"lg\">\r\n        <Grid container>\r\n            <Grid item xs={2}>\r\n                <SelectControlledComponent title=\"Status\" state={status} selectListItems={selectListItems} handleChange={handleStatusChange}  />\r\n            </Grid> \r\n            <Grid item xs={3}>\r\n            <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                options={products}\r\n                getOptionLabel={(option: Product) => option.name ?? \"\"}\r\n                style={{ width: 300 }}\r\n                onInputChange={(event, value) => handleChangeProductName(value)}\r\n                renderInput={(params) => <TextField {...params} label=\"Products\" variant=\"outlined\" />}\r\n            />\r\n            </Grid>\r\n            <Grid item xs={5}></Grid>     \r\n            <Grid item xs={2}>\r\n                <Button onClick={redirectToForm} variant=\"contained\" color=\"primary\">\r\n                    Create Scheme\r\n                </Button>\r\n            </Grid>        \r\n        </Grid>\r\n        <br/>\r\n        <DataTable columnNames={columnNames} accessors={accessors} data={rows} title={\"Discount Schemes\"} enablePaging={true} pageSize={5} />\r\n        \r\n        <DialogComponent open={openProductDialog} toggleOpen={() => setOpenProductDialog(!openProductDialog)} \r\n            content={productTextComponent} showPicture />\r\n        <DialogComponent open={openDeleteDialog} toggleOpen={() => setOpenDeleteDialog(!openDeleteDialog)} content={<p>Confirm Delete?</p>}\r\n            secondaryAction={deleteProduct} secondaryActionTitle=\"Delete Product\"/>\r\n    </Container>\r\n}\r\n\r\nfunction createRowFromScheme(ds: DiscountScheme): Row {\r\n    let row: Row = new Row();\r\n    if (ds == null) {\r\n        return row;\r\n    }\r\n    \r\n    const discountedPrice = ds.discountedPrice;\r\n    const originalPrice = ds.product?.originalPrice;\r\n    row.discountedPrice = <span>${discountedPrice} <del>${originalPrice}</del></span>\r\n\r\n    const expiryDate: Date = new Date(ds.expiryDate as Date);\r\n    row.bidExpiryDate = expiryDate.toDateString();\r\n    row.deliveryCharge = \"$\" + ds.deliveryCharge;\r\n    row.currentBids =  ds.bids\r\n        .filter(bid => !bid.isInCart)\r\n        .reduce((accum, bid) => accum + bid.quantity, 0);\r\n\r\n    row.minOrderQnty = ds.minOrderQnty;\r\n    row.bidStatus = determineStatusOfScheme(ds);\r\n\r\n    return row;    \r\n}\r\n\r\nfunction determineStatusOfScheme(ds: DiscountScheme): Status {\r\n    const expiryDate: Date = new Date(ds.expiryDate as Date);\r\n\r\n    const isSchemeSuccess: boolean = ds.bids.some(bid => bid.bidSuccessDate != null);\r\n    const hasBidExpired: boolean = expiryDate < new Date();\r\n\r\n    if (isSchemeSuccess) {\r\n        return \"SUCCESS\"\r\n    } else if (!isSchemeSuccess && hasBidExpired ) {\r\n        return \"FAILED\";\r\n    } else {\r\n        return \"PENDING\";\r\n    }\r\n}","import { Action } from \"redux\";\r\nimport { Product } from \"../../models/Product\";\r\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\r\nimport { ACTIONS } from \"../actionEnums\";\r\nimport { IErrorAction, errorAction } from \"../actions/errorAction\";\r\nimport { ApiError } from \"../../models/ApiError\";\r\nimport { UtilService } from \"../../services/UtilService\";\r\n\r\nexport interface IProductAction extends Action {\r\n    type: string;\r\n    product?: Product | undefined;\r\n    products?: Product[] | undefined;\r\n    message?: string;  \r\n    httpMessage?: string // For API messages\r\n}\r\n\r\nexport function getProductsAsync(producerId: number): ThunkAction<Promise<void>, {}, {}, IProductAction | IErrorAction> {\r\n    return async (dispatch: ThunkDispatch<{}, {}, IProductAction | IErrorAction>) => {\r\n        dispatch({ type: ACTIONS.GET_PRODUCTS_REQUEST, message: \"Getting products of producer ...\" });\r\n\r\n        try {\r\n            const response: Response = await fetch(UtilService.getApiUrl() + \"products/producer/\" + producerId, {\r\n                headers: UtilService.getAuthHeader()\r\n            });\r\n\r\n            if (!response.ok) {\r\n                let apiError: ApiError = await response.json();\r\n                throw apiError;\r\n            }\r\n            \r\n            let products: Product[] = (await response.json());\r\n            dispatch({ type: ACTIONS.GET_PRODUCTS_RECEIVED, products: products, message: response.statusText,  httpMessage: ACTIONS.HTTP_READ_SUCCESS });\r\n        } catch(error) {\r\n            dispatch(errorAction(ACTIONS.ERROR, error));\r\n        }        \r\n        \r\n    }\r\n}\r\n\r\nexport function getProductAsync(productId: number): ThunkAction<Promise<void>, {}, {}, IProductAction | IErrorAction> {\r\n    return async (dispatch: ThunkDispatch<{}, {}, IProductAction | IErrorAction>) => {\r\n        dispatch({ type: ACTIONS.GET_PRODUCT_REQUEST, message: \"Getting products of producer ...\" });\r\n\r\n        try {\r\n            const response: Response = await fetch(UtilService.getApiUrl() + \"products/\" + productId, {\r\n                headers: UtilService.getAuthHeader()\r\n            });\r\n\r\n            if (!response.ok) {\r\n                let apiError: ApiError = await response.json();\r\n                throw apiError;\r\n            }\r\n            \r\n            let product: Product = (await response.json());\r\n            console.log(\"In productThunk\", product)\r\n            dispatch({ type: ACTIONS.GET_PRODUCT_RECEIVED, product: product, message: response.statusText,  httpMessage: ACTIONS.HTTP_READ_SUCCESS });\r\n        } catch(error) {\r\n            dispatch(errorAction(ACTIONS.ERROR, error));\r\n        }        \r\n        \r\n    }\r\n}\r\n\r\nexport function createProductsAsync(product: Product): ThunkAction<Promise<void>, {}, {}, IProductAction | IErrorAction> {\r\n    return async (dispatch: ThunkDispatch<{}, {}, IProductAction | IErrorAction>) => {\r\n        dispatch({ type: ACTIONS.GET_PRODUCTS_REQUEST, message: \"Creating product ...\" });\r\n\r\n        try {\r\n            const response: Response = await fetch(UtilService.getApiUrl() + \"products/\", {\r\n                method: \"POST\",\r\n                headers: UtilService.getAuthHeader(),\r\n                body: JSON.stringify(product)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                let apiError: ApiError = await response.json();\r\n                console.log(\"apiError in createProductAsync\", apiError);\r\n                throw apiError;\r\n            }\r\n            \r\n            let createdProduct: Product = (await response.json());\r\n            dispatch({ type: ACTIONS.GET_PRODUCTS_RECEIVED, product: createdProduct, message: response.statusText,  httpMessage: ACTIONS.HTTP_CREATE_SUCCESS });\r\n        } catch(error) {\r\n            dispatch(errorAction(ACTIONS.ERROR, error));\r\n        }        \r\n        \r\n    }\r\n}\r\n\r\nexport function updateProductAsync(productId: number, product: Product): ThunkAction<Promise<void>, {}, {}, IProductAction | IErrorAction> {\r\n    return async (dispatch: ThunkDispatch<{}, {}, IProductAction | IErrorAction>) => {\r\n        dispatch({ type: ACTIONS.UPDATE_PRODUCT_REQUEST, message: \"Updating product ...\" });\r\n\r\n        try {\r\n            const response: Response = await fetch(UtilService.getApiUrl() + \"products/\" + productId, {\r\n                method: \"PUT\",\r\n                headers: UtilService.getAuthHeader(),\r\n                body: JSON.stringify(product)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                let apiError: ApiError = await response.json();\r\n                throw apiError;\r\n            }\r\n            \r\n            let updatedProduct: Product = (await response.json());\r\n            console.log(\"updatedProduct\", updatedProduct);\r\n            dispatch({ type: ACTIONS.GET_PRODUCTS_RECEIVED, product: updatedProduct, message: response.statusText,  httpMessage: ACTIONS.HTTP_UPDATE_SUCCESS });\r\n        } catch(error) {\r\n            dispatch(errorAction(ACTIONS.ERROR, error));\r\n        }        \r\n        \r\n    }\r\n}\r\n\r\nexport function deleteProductAsync(productId: number): ThunkAction<Promise<void>, {}, {}, IProductAction | IErrorAction> {\r\n    return async (dispatch: ThunkDispatch<{}, {}, IProductAction | IErrorAction>) => {\r\n        dispatch({ type: ACTIONS.DELETE_PRODUCT_REQUEST, message: \"Deleting product ...\" });\r\n\r\n        try {\r\n            const response: Response = await fetch(UtilService.getApiUrl() + \"products/\" + productId, {\r\n                method: \"DELETE\",\r\n                headers: UtilService.getAuthHeader()\r\n            });\r\n\r\n            if (!response.ok) {\r\n                let apiError: ApiError = await response.json();\r\n                throw apiError;\r\n            }\r\n            \r\n            let deletedProduct: Product = (await response.json());\r\n            console.log(\"deletedProduct\", deletedProduct);\r\n            dispatch({ type: ACTIONS.DELETE_PRODUCT_RECEIVED, product: deletedProduct, message: response.statusText,  httpMessage: ACTIONS.HTTP_DELETE_SUCCESS });\r\n        } catch(error) {\r\n            dispatch(errorAction(ACTIONS.ERROR, error));\r\n        }        \r\n        \r\n    }\r\n}\r\n","import React from \"react\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker} from '@material-ui/pickers';\r\nimport { v4 as guid } from 'uuid';\r\nimport { Control, Controller, DeepMap, FieldError } from \"react-hook-form\";\r\n\r\ninterface IPropUncontrolled {\r\n    label: string,\r\n    name: string,\r\n    errorMessage?: string,\r\n    defaultValue?: string,\r\n    control: Control<Record<string, any>>,\r\n    errors: DeepMap<Record<string, any>, FieldError>,\r\n    rules?: object\r\n}\r\n\r\nexport function DatePickerUncontrolledComponent({ control, errors, label, name, defaultValue=\"\", errorMessage=\"\", rules={}}: IPropUncontrolled): JSX.Element {\r\n    let isError: boolean = errors[name] != null;\r\n    let helperText: string = isError ? errorMessage : \"\";\r\n    return <Controller\r\n        name={name}\r\n        defaultValue={defaultValue}\r\n        control={control}\r\n        rules={rules}\r\n        render={props => <DatePickerControlledComponent {...props} label={label} error={isError} helperText={helperText} />} // props contains: onChange, onBlur and value\r\n    />  \r\n}\r\n\r\ninterface IPropControlled {\r\n    onChange: () => void;\r\n    label: string;\r\n    value: Date;\r\n    error?: boolean;\r\n    helperText?: string\r\n}\r\n\r\nexport function DatePickerControlledComponent({label, onChange, value, error=false, helperText=\"\"}: IPropControlled): JSX.Element {\r\n\r\n    if (!value) {\r\n        value = new Date();\r\n    }\r\n    return <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <KeyboardDatePicker\r\n            error={error}\r\n            helperText={helperText}\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"normal\"\r\n            id={guid()}\r\n            label={label}\r\n            value={value }\r\n            onChange={onChange}\r\n            KeyboardButtonProps={{\r\n                'aria-label': 'change date',\r\n            }} />\r\n    </MuiPickersUtilsProvider>\r\n}","import React, { useEffect } from \"react\";\r\nimport { Container, Grid, TextField } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Dispatch } from \"redux\"; \r\nimport { Product } from \"../models/Product\";\r\nimport { RootState } from \"../store/rootReducer\";\r\nimport { getProductsAsync } from \"../store/thunks/productThunk\";\r\nimport { SelectListItem } from \"../models/SelectListItem\";\r\nimport { DatePickerUncontrolledComponent } from \"../components/discountSchemeForm/DatePickerComponent\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { DiscountScheme } from \"../models/DiscountScheme\";\r\nimport { TextComponent } from \"../components/shared/TextComponent\";\r\nimport { createDiscountSchemeAsync } from \"../store/thunks/discountSchemeThunk\";\r\nimport { ACTIONS } from \"../store/actionEnums\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { TextFieldUncontrolledComponent } from \"../components/shared/TextFieldComponents\";\r\n\r\nenum FORM_NAMES {\r\n    productId = \"productId\",\r\n    discountedPrice = \"discountedPrice\",\r\n    minOrderQnty = \"minOrderQnty\",\r\n    deliveryCharge = \"deliveryCharge\",\r\n    expiryDate = \"expiryDate\"\r\n}\r\n\r\nexport function DiscountSchemeForm(): JSX.Element {\r\n    document.title = \"Create Discount Scheme\";\r\n\r\n    const dispatch: Dispatch<any> = useDispatch(); \r\n    const history = useHistory();  \r\n\r\n    const products: Product[] = useSelector((action: RootState) => action.productReducer.products as Product[] ) ?? [];  \r\n\r\n    let selectListItems: SelectListItem[] = products.map(product => new SelectListItem(product.name, product.productId));\r\n\r\n    useEffect(() => {\r\n        const producerId: number = 2;\r\n        const action = getProductsAsync(producerId);\r\n        dispatch(action);\r\n    }, []);  \r\n\r\n    // React hook form - uncontrolled state that uses useRef behind the scenes\r\n    const { errors, handleSubmit, control, getValues, watch } = useForm();    \r\n\r\n    const watchProductId: number = watch(FORM_NAMES.productId, 0);\r\n    const selectedProduct: Product = products.find(product => product.productId === watchProductId) ?? new Product();\r\n    const productTextDict: Record<string, any> = {\r\n        \"Original Price\": \"$\" + selectedProduct.originalPrice,\r\n        \"Description\": selectedProduct.description\r\n    }\r\n    console.log(\"watchProductId\", watchProductId);    \r\n\r\n    const onSubmit = (data: any) => {\r\n        //console.log(data, errors);\r\n        const {productId, discountedPrice, minOrderQnty, deliveryCharge, expiryDate} = getValues([FORM_NAMES.productId, FORM_NAMES.discountedPrice, \r\n            FORM_NAMES.minOrderQnty, FORM_NAMES.deliveryCharge, FORM_NAMES.expiryDate]);\r\n        const discountScheme: DiscountScheme = createDiscountScheme(productId, minOrderQnty, discountedPrice, expiryDate, deliveryCharge);\r\n        const action = createDiscountSchemeAsync(discountScheme);\r\n        dispatch(action);\r\n    }   \r\n\r\n    // If create is successful, redirect\r\n    const apiMessage: string = useSelector( (action: RootState) => action.discountSchemeReducer.httpMessage as string ) ?? \"\"; \r\n    useEffect(() => {\r\n        if (apiMessage.includes(ACTIONS.HTTP_CREATE_SUCCESS)) {\r\n            history.push(\"/producer/discountSchemes\");\r\n        }\r\n    }, [apiMessage]);\r\n\r\n    // Redirect to product form if user decides to create new product\r\n    const redirectToProductForm = () => history.push(\"/producer/product/\" + \"0\");\r\n\r\n    return <Container maxWidth=\"md\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            \r\n            <Grid container justify=\"flex-start\">\r\n                <Grid item xs={4}>\r\n                    <Controller                     \r\n                        control={control}\r\n                        name={FORM_NAMES.productId}                \r\n                        rules={{\"required\": true }}\r\n                        render={({onChange}: any) =>  <Autocomplete\r\n                                id=\"combo-box-demo\"\r\n                                options={products}\r\n                                getOptionLabel={(option: Product) => option.name ?? \"\"}\r\n                                style={{ width: 300 }} \r\n                                onChange={(event: any, data) => onChange((data as Product).productId)}                                \r\n                                renderInput={(params) => <TextField {...params} label=\"Products\" variant=\"outlined\" />}  \r\n                                />\r\n                        }\r\n                    />\r\n                    {errors[\"productId\"] &&\r\n                        <p style={{fontSize: \"14px\", color: \"red\", textAlign: \"left\"}}>Product is required</p>                                            \r\n                    }\r\n                \r\n                    {/* <SelectUncontrolledComponent title={\"Choose Product\"} selectListItems={selectListItems} name={FORM_NAMES.productId} errorMessage=\"Scheme is required\"\r\n                        control={control} errors={errors} rules={{required: true}} /> */}\r\n                </Grid>                \r\n                <Grid item xs={3} alignItems=\"flex-end\">\r\n                    <Button onClick={redirectToProductForm} variant=\"outlined\" size=\"small\" style={{bottom: \"-30%\"}} >Or create one</Button>\r\n                </Grid>\r\n                <EmptyGridRow />\r\n\r\n                { watchProductId > 0 &&\r\n                    <Grid item xs={12}>\r\n                        <TextComponent textDict={productTextDict}  color={\"textSecondary\"} />\r\n                    </Grid>\r\n                }\r\n                <EmptyGridRow />\r\n\r\n                <Grid item xs={12}>\r\n                    <TextFieldUncontrolledComponent isFullWidth={true} control={control} errors={errors} name={FORM_NAMES.discountedPrice} label={\"Discounted Price\"} errorMessage={\"Discounted Price is required\"} \r\n                        rules={{required: true, min: 1}} adornment={\"$\"} />\r\n                </Grid>\r\n                <EmptyGridRow />\r\n\r\n                <Grid item xs={12}>\r\n                    <TextFieldUncontrolledComponent isFullWidth={true} control={control} errors={errors} name={FORM_NAMES.minOrderQnty} label={\"Minimum order quantity\"} errorMessage={\"Minimum order quantity is required\"} \r\n                        rules={{required: true, min: 1}} />\r\n                </Grid>\r\n                <EmptyGridRow />\r\n\r\n                <Grid item xs={12}>\r\n                    <TextFieldUncontrolledComponent isFullWidth={true} control={control} errors={errors} name={FORM_NAMES.deliveryCharge} label={\"Delivery Charge\"} errorMessage={\"Delivery Charge is required\"} \r\n                        rules={{required: true, min: 1}} adornment={\"$\"} />        \r\n                </Grid>\r\n                <EmptyGridRow />\r\n\r\n                <Grid item xs={2}>\r\n                    <DatePickerUncontrolledComponent label={\"Expiry Date\"} name={FORM_NAMES.expiryDate} \r\n                        control={control} errors={errors} rules={{required: true}} errorMessage={\"Expiry Date is required\"} />\r\n                </Grid>\r\n                <EmptyGridRow />\r\n\r\n                <Grid item xs={12}>\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button> \r\n                </Grid>\r\n                <EmptyGridRow />\r\n\r\n            </Grid>            \r\n                        \r\n        </form>\r\n    </Container>\r\n}\r\n\r\nfunction createDiscountScheme(productId: number, minOrderQnty: number, discountedPrice: number, expiryDate: Date, deliveryCharge: number): DiscountScheme {\r\n    let discountScheme: DiscountScheme = new DiscountScheme();\r\n    discountScheme.productId = productId;\r\n    discountScheme.minOrderQnty = minOrderQnty;\r\n    discountScheme.discountedPrice = discountedPrice;\r\n    discountScheme.expiryDate = expiryDate;\r\n    discountScheme.deliveryCharge = deliveryCharge;\r\n\r\n    return discountScheme;\r\n}\r\n\r\nfunction EmptyGridRow(): JSX.Element {\r\n    return <Grid item xs={12}><br/></Grid>;\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Dispatch } from \"redux\"; \r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Product } from \"../models/Product\";\r\nimport { createProductsAsync, getProductAsync, updateProductAsync } from \"../store/thunks/productThunk\";\r\nimport { RootState } from \"../store/rootReducer\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { ACTIONS } from \"../store/actionEnums\";\r\nimport { useState } from \"react\";\r\nimport { SnackbarComponent } from \"../components/shared/SnackbarComponent\";\r\nimport { TextFieldUncontrolledComponent } from \"../components/shared/TextFieldComponents\";\r\n\r\nenum FORM_NAMES {\r\n    productId = \"productId\",\r\n    name = \"name\",\r\n    category = \"category\",\r\n    description = \"description\",\r\n    originalPrice = \"originalPrice\"\r\n}\r\n\r\ntype FORM_DATA = {\r\n    \"productId\" : number,\r\n    \"name\": string;\r\n    \"category\": string;\r\n    \"description\": string;\r\n    \"originalPrice\": number;\r\n}\r\n\r\n\r\n// User can either Create or Update the product\r\ntype MODE = \"CREATE\" | \"UPDATE\";\r\n\r\nexport function ProductForm(): JSX.Element {\r\n    document.title = \"Product Form\";\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const history = useHistory();\r\n\r\n    // If creating, route param is set to 0. If update, route param is set to existing productId\r\n    let routeParams: Record<string, string>  = (useParams()) as Record<string, string>;    \r\n    const productId: number = parseInt(routeParams[\"productId\"]); \r\n    const mode: MODE = productId === 0 ? \"CREATE\" : \"UPDATE\";\r\n\r\n    let productToUpdate: Product = useSelector((action: RootState) => action.productReducer.product as Product ) ?? new Product();\r\n\r\n    useEffect(() => {\r\n        if (mode === \"UPDATE\") {\r\n            const action = getProductAsync(productId);\r\n            dispatch(action);\r\n        }   \r\n    }, [productId]);   \r\n\r\n    const { errors, handleSubmit, control, getValues, reset, setValue } = useForm<FORM_DATA>(); \r\n\r\n    useEffect(() => {\r\n        if (mode === \"UPDATE\") {\r\n            setValue(FORM_NAMES.productId, productToUpdate.productId);\r\n            setValue(FORM_NAMES.name, productToUpdate.name);\r\n            setValue(FORM_NAMES.category, productToUpdate.category);\r\n            setValue(FORM_NAMES.description, productToUpdate.description);\r\n            setValue(FORM_NAMES.originalPrice, productToUpdate.originalPrice);\r\n        }\r\n    }, [JSON.stringify(productToUpdate)])\r\n    \r\n    \r\n\r\n    const onSubmit = (data: any) => {\r\n\r\n        const {productId, name, category, description, originalPrice} = data;        \r\n        //getValues([FORM_NAMES.productId, FORM_NAMES.name, FORM_NAMES.category, FORM_NAMES.description, FORM_NAMES.originalPrice]);\r\n        const product = initializeProduct(productId, name, category, description, originalPrice);\r\n        console.log(\"submitting product\", product);\r\n        if (mode === \"CREATE\") {\r\n            const action = createProductsAsync(product);\r\n            dispatch(action);\r\n            reset({});\r\n        } else if (mode === \"UPDATE\") {\r\n            product.producerId = productToUpdate.producerId;\r\n            const action = updateProductAsync(productId, product);\r\n            dispatch(action);\r\n            //reset(product);\r\n        }                \r\n    };\r\n    \r\n    const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n    const apiMessage: string = useSelector( (action: RootState) => action.productReducer.httpMessage as string ) ?? \"\"; \r\n    useEffect(() => {\r\n        if (apiMessage.includes(ACTIONS.HTTP_CREATE_SUCCESS) || apiMessage.includes(ACTIONS.HTTP_UPDATE_SUCCESS)) {\r\n            setOpenSnackbar(true);\r\n        }        \r\n    }, [apiMessage]);\r\n\r\n    return <Container maxWidth=\"md\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <GridRow display=\"none\" component={\r\n                <TextFieldUncontrolledComponent isFullWidth={true} control={control} errors={errors} name={FORM_NAMES.productId} label={\"Product Id\"} \r\n                    rules={{required: false}}  />\r\n            }/>\r\n            \r\n            <GridRow component={\r\n                <TextFieldUncontrolledComponent isFullWidth={true} control={control} errors={errors} name={FORM_NAMES.name} label={\"Name\"} \r\n                    rules={{required: true}} errorMessage=\"Name is required\" />\r\n            }/>\r\n\r\n            <GridRow component={\r\n                <TextFieldUncontrolledComponent isFullWidth={true} control={control} errors={errors} name={FORM_NAMES.originalPrice} label={\"Original Price\"} \r\n                    rules={{required: true, min: 1}} adornment={\"$\"} errorMessage=\"Original Price is required\" />\r\n            } />\r\n\r\n            <GridRow component={\r\n                <TextFieldUncontrolledComponent isFullWidth={true} control={control} errors={errors} name={FORM_NAMES.category} label={\"Category\"} \r\n                    rules={{required: false}} />\r\n            }/>\r\n\r\n            <GridRow component={\r\n                <TextFieldUncontrolledComponent isFullWidth={true} control={control} errors={errors} name={FORM_NAMES.description} label={\"Description\"} \r\n                    rules={{required: false}}  />\r\n            }/>                          \r\n\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button> \r\n\r\n        </form>\r\n        <SnackbarComponent open={openSnackbar} setOpen={setOpenSnackbar} severity={\"success\"} message={mode + \" is successful!\"}/>\r\n    </Container>\r\n}\r\n\r\ninterface IRowProp {\r\n    component: JSX.Element,\r\n    display?: \"initial\" | \"none\"\r\n}\r\nfunction GridRow({component, display=\"initial\"}: IRowProp): JSX.Element {\r\n    return <div>\r\n        <Grid item xs={12} style={{display: display}}>\r\n            {component}\r\n        </Grid>\r\n        <Grid item xs={12}><br/></Grid>\r\n    </div>;\r\n}\r\n\r\nfunction initializeProduct(productId: number, name: string, category: string, description: string, originalPrice: number): Product {\r\n    let product: Product = new Product();\r\n    product.productId = productId > 0 ? productId : 0;  //When creating product, productId is set to null from react hook form\r\n    product.name = name;\r\n    product.category = category;\r\n    product.description = description;\r\n    product.originalPrice = originalPrice;\r\n    product.producerId = 2;\r\n    return product;\r\n}\r\n ","import React from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Controller, Control, DeepMap, FieldError } from \"react-hook-form\";\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\ninterface IProp {\r\n    label: string,\r\n    name: string,\r\n    errorMessage?: string,\r\n    defaultValue?: string,\r\n    control: Control<Record<string, any>>,\r\n    errors: DeepMap<Record<string, any>, FieldError>,\r\n    rules: object,\r\n    isFullWidth?: boolean,\r\n    adornment?: string | null,\r\n    variant?: \"outlined\" | \"filled\" | \"standard\",\r\n    type?: \"text\" | \"number\" | \"password\"\r\n}\r\n\r\nexport function TextFieldUncontrolledComponent({ label, name, defaultValue=\"\", \r\n    isFullWidth=false, variant=\"standard\", type=\"text\",\r\n    adornment=null,\r\n    control, errors, \r\n    errorMessage=\"\", rules={}}: IProp): JSX.Element {\r\n    console.log(\"errors\", errors);\r\n    let isError: boolean = errors[name] != null;\r\n    let helperText: string = isError ? errorMessage : \"\";\r\n\r\n    return <div>\r\n        <Controller\r\n            name={name}\r\n            defaultValue={defaultValue}\r\n            control={control}\r\n            rules={rules}\r\n            render={props => <TextField {...props} label={label} error={isError} helperText={helperText} \r\n                fullWidth={isFullWidth} variant={variant} type={type}\r\n                InputProps={{\r\n                    startAdornment: adornment ? <InputAdornment position=\"start\">{adornment}</InputAdornment> : null\r\n                }}\r\n            />} \r\n        />  \r\n    </div> \r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Product } from \"../models/Product\";\r\nimport { RootState } from \"../store/rootReducer\";\r\nimport { deleteProductAsync, getProductsAsync } from \"../store/thunks/productThunk\";\r\nimport { Dispatch } from \"redux\"; \r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport { DialogComponent } from \"../components/shared/DialogComponent\";\r\nimport { DataTable } from \"../components/shared/DataTable\";\r\nimport \"./toolTip.css\";\r\nimport { ACTIONS } from \"../store/actionEnums\";\r\n\r\n\r\nclass Row {\r\n    name: string | undefined;\r\n    originalPrice: string | undefined;\r\n    category: string | undefined;\r\n    description: string | undefined;\r\n    update: JSX.Element | undefined;\r\n    delete: JSX.Element | undefined;\r\n}\r\n\r\nexport function ProductsPage(): JSX.Element {\r\n    document.title = \"Products\";\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const history = useHistory(); \r\n    const producerId = 2;\r\n\r\n    const products: Product[] = useSelector((action: RootState) => action.productReducer.products as Product[]) ?? [];\r\n    useEffect(() => {\r\n        \r\n        const action = getProductsAsync(producerId);\r\n        dispatch(action);        \r\n    }, []);\r\n\r\n    const columnNames: string[] = [\"Name\", \"Original Price\", \"Category\",  \"Description\", \"Update\",\"Delete\"];\r\n    const accessors: string[] = Object.keys(new Row());\r\n    const rows: Row[] = [];\r\n\r\n    // When user clicks delete in the opened product dialog, confirm delete\r\n    const [openDeleteDialog, setOpenDeleteDialog] = useState<boolean>(false); \r\n\r\n    const [targetProduct, setTargetProduct] = useState<Product>(new Product());\r\n    const deleteProduct = () => {\r\n        console.log(\"productId\", targetProduct.productId);\r\n        if (targetProduct.discountSchemes.length > 0) {\r\n            return;\r\n        }\r\n        const action = deleteProductAsync(targetProduct.productId);\r\n        dispatch(action);\r\n        setOpenDeleteDialog(false);\r\n    } \r\n\r\n    let httpResponseMessage: string = useSelector((action: RootState) => action.productReducer.httpMessage as string);\r\n    useEffect(() => {\r\n        if (httpResponseMessage.includes(ACTIONS.HTTP_DELETE_SUCCESS)) {\r\n            console.log(\"in productsPage\", httpResponseMessage);\r\n            const action = getProductsAsync(producerId);\r\n            dispatch(action);\r\n        }\r\n    }, [httpResponseMessage]); \r\n\r\n    for (let i = 0; i < products.length; i++) {\r\n        let product: Product = products[i];\r\n        let row: Row = createRow(product);\r\n\r\n        const updateProduct = () => history.push(\"/producer/product/\" + product.productId);\r\n        const onDeleteClick = () => {\r\n            setOpenDeleteDialog(true);\r\n            setTargetProduct(product);\r\n        }\r\n\r\n        // If product already has schemes, disallow delete\r\n        const isDisableDelete: boolean = product.discountSchemes.length > 0;\r\n        let tooltipMessage: string = isDisableDelete ? \"Cannot delete product as it has dependent discount schemes\" : \"\";\r\n\r\n        row.update = <Button size=\"small\" variant=\"outlined\" onClick={updateProduct}>Update</Button>\r\n        row.delete = <div className=\"tooltip__div-visible\">\r\n            <Button color=\"secondary\" size=\"small\" variant=\"outlined\"  \r\n                disabled={isDisableDelete} \r\n                onClick={onDeleteClick}>Delete\r\n                <span className=\"tooltiptext\">{tooltipMessage}</span>\r\n            </Button> \r\n        </div> \r\n        rows.push(row);\r\n    }    \r\n\r\n    const redirectToProductForm = () => history.push(\"/producer/product/\" + 0);\r\n\r\n    return <Container>\r\n        <Grid container>\r\n            <Grid item xs={10}></Grid>\r\n            <Grid item xs={2}>\r\n                <Button variant=\"contained\" onClick={redirectToProductForm} color=\"primary\">Create Product</Button>\r\n            </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}><br/></Grid>\r\n        <DataTable columnNames={columnNames} accessors={accessors} data={rows} title={\"Products\"} enablePaging={true} pageSize={5} />\r\n        <DialogComponent open={openDeleteDialog} toggleOpen={() => setOpenDeleteDialog(!openDeleteDialog)} content={<p>Confirm Delete?</p>}\r\n            secondaryAction={deleteProduct} secondaryActionTitle=\"Delete Product\"/>\r\n    </Container>\r\n}\r\n\r\nfunction createRow(product: Product): Row {\r\n    let row: Row = new Row();\r\n    row.name = product.name;\r\n    row.originalPrice = \"$\" + product.originalPrice;\r\n    row.category = product.category;\r\n    row.description = product.description;\r\n    return row;\r\n}","export class IdentityUser {\r\n    userName: string = \"\";\r\n    passwordHash: string = \"\";\r\n}","export enum Claims {\r\n    PRODUCER = \"PRODUCER\",\r\n    CONSUMER = \"CONSUMER\",\r\n}\r\n\r\n\r\nexport class AuthVM {\r\n    jwt: string = \"\";\r\n    isAuthenticated: boolean | \"UNTOUCHED\" = false;\r\n    id: string = \"\";\r\n    userName: string = \"\";\r\n    email: string = \"\";\r\n    claims: string[] = []\r\n\r\n    constructor(userName=\"\") {\r\n        this.userName = userName;\r\n    }\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Button, Container, Grid } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { IdentityUser } from \"../models/IdentityUser\";\r\nimport { loginAsync } from \"../store/thunks/authThunk\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Dispatch } from \"redux\"; \r\nimport { AuthVM } from \"../models/AuthVM\";\r\nimport { RootState } from \"../store/rootReducer\";\r\nimport { SnackbarComponent } from \"../components/shared/SnackbarComponent\"; \r\nimport { TextFieldUncontrolledComponent } from \"../components/shared/TextFieldComponents\";\r\n\r\nenum FORM_NAMES {\r\n    userName = \"userName\",\r\n    passwordHash = \"passwordHash\"\r\n}\r\n\r\ntype FORM_DATA = {\r\n    \"userName\" : string,\r\n    \"passwordHash\": string;\r\n}\r\n\r\n\r\nexport function LoginForm(): JSX.Element {\r\n    document.title = \"Login\";\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const history = useHistory();\r\n\r\n    let [openSnackBar, setOpenSnackBar] = useState<boolean>(false);\r\n\r\n    let defaultAuthVM = new AuthVM();\r\n    defaultAuthVM.isAuthenticated = \"UNTOUCHED\";\r\n\r\n    let authVM: AuthVM = useSelector((action: RootState) => action.authReducer.authVM) ?? defaultAuthVM;\r\n\r\n    useEffect(() => { \r\n        if (authVM.isAuthenticated === \"UNTOUCHED\") {\r\n            return;\r\n        }\r\n\r\n        if (authVM.isAuthenticated) {\r\n            history.push(\"\");\r\n        } else {\r\n            setOpenSnackBar(true);\r\n        }\r\n    }, [authVM.isAuthenticated]);\r\n  \r\n\r\n    const { errors, handleSubmit, control } = useForm<FORM_DATA>(); \r\n\r\n    const onSubmit = (data: FORM_DATA) => {\r\n        console.log(data);\r\n        let identityUser: IdentityUser = new IdentityUser();\r\n        identityUser.userName = data.userName;\r\n        identityUser.passwordHash = data.passwordHash;\r\n\r\n        const action = loginAsync(identityUser);\r\n        dispatch(action);\r\n\r\n    }\r\n\r\n    return <Container>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <GridRow component={\r\n                <TextFieldUncontrolledComponent isFullWidth={true} control={control} errors={errors} name={FORM_NAMES.userName} label={\"UserName\"} \r\n                    variant=\"outlined\"\r\n                    rules={{required: true}} errorMessage=\"Name is required\" />\r\n            }/>\r\n            \r\n            <GridRow component={\r\n                <TextFieldUncontrolledComponent isFullWidth={true} control={control} errors={errors} name={FORM_NAMES.passwordHash} label={\"Password\"} \r\n                    variant=\"outlined\" type=\"password\"\r\n                    rules={{required: true}} errorMessage=\"Password is required\" />\r\n            }/>\r\n                        \r\n\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button> \r\n\r\n        </form>\r\n        <SnackbarComponent open={openSnackBar} setOpen={setOpenSnackBar} message=\"Authentication failed\" severity=\"error\"/>\r\n    </Container>\r\n}\r\n\r\ninterface IRowProp {\r\n    component: JSX.Element,\r\n    display?: \"initial\" | \"none\"\r\n}\r\n\r\nfunction GridRow({component, display=\"initial\"}: IRowProp): JSX.Element {\r\n    return <div>\r\n        <Grid item xs={12}>\r\n            {component}\r\n        </Grid>\r\n        <Grid item xs={12}><br/></Grid>\r\n    </div>;\r\n}","import { ThunkAction, ThunkDispatch } from \"@reduxjs/toolkit\";\r\nimport { Action } from \"redux\";\r\nimport { ApiError } from \"../../models/ApiError\";\r\nimport { AuthVM } from \"../../models/AuthVM\";\r\nimport { IdentityUser } from \"../../models/IdentityUser\";\r\nimport { UtilService } from \"../../services/UtilService\";\r\nimport { ACTIONS } from \"../actionEnums\";\r\nimport { errorAction, IErrorAction } from \"../actions/errorAction\";\r\n\r\nexport interface IAuthAction extends Action {\r\n    type: string;\r\n    identityUser?: IdentityUser | undefined;\r\n    message?: string; // All internal messages and for response messages received on GET request \r\n    authVM?: AuthVM;\r\n    httpMessage?: string; // For API messages\r\n\r\n}\r\n\r\n export function loginAsync(identityUser: IdentityUser): ThunkAction<Promise<void>, {}, {}, IAuthAction | IErrorAction> {\r\n    return async (dispatch: ThunkDispatch<{}, {}, IAuthAction | IErrorAction>) => {\r\n        dispatch({ type: ACTIONS.LOGIN_REQUEST, message: \"Attempting login...\"});\r\n\r\n        try {\r\n            const response: Response = await fetch(UtilService.getApiUrl() + \"auth/signIn\", {\r\n                method: \"POST\",\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(identityUser)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                let apiError: ApiError = await response.json();\r\n                throw apiError;\r\n            }\r\n            \r\n            // If authentication succeeds, server sends authVM. Otherwise, AuthenticationException raised\r\n            let authVM: AuthVM = await response.json();\r\n            console.log(\"IAuthVM\", authVM);\r\n\r\n            if (authVM.isAuthenticated === false) {\r\n                authVM.userName = \"ACCOUNT\";\r\n                dispatch({ type: ACTIONS.LOGIN_FAILED,\r\n                    authVM: authVM,\r\n                    message: response.statusText,  \r\n                    httpMessage: ACTIONS.HTTP_UPDATE_SUCCESS \r\n                });\r\n              return;\r\n            }\r\n\r\n            dispatch({ type: ACTIONS.LOGIN_SUCCESS, \r\n                authVM: authVM,\r\n                message: response.statusText,  \r\n                httpMessage: ACTIONS.HTTP_UPDATE_SUCCESS \r\n            });\r\n        } catch(error) {          \r\n            dispatch(errorAction(ACTIONS.ERROR, error));\r\n        }        \r\n        \r\n    }\r\n}\r\n\r\nexport function logoutSync(): IAuthAction {\r\n    let authVM: AuthVM = new AuthVM(\"ACCOUNT\");\r\n    authVM.isAuthenticated = \"UNTOUCHED\";\r\n    return { type: ACTIONS.LOGOUT, message: \"Logout ...\", authVM: authVM}; \r\n}\r\n","import { Container } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport function ErrorPage(): JSX.Element {\r\n    return <Container>\r\n        <h2>An error occured</h2>\r\n    </Container>\r\n}","import { Container } from \"@material-ui/core\";\r\nimport React, { Fragment, FunctionComponent, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink, Route, useHistory } from 'react-router-dom';\r\nimport { ErrorPage } from \"../../containers/ErrorPage\";\r\nimport { AuthVM } from \"../../models/AuthVM\";\r\nimport { RootState } from \"../../store/rootReducer\";\r\nimport { SnackbarComponent } from \"../shared/SnackbarComponent\";\r\n\r\ninterface IProp {\r\n    component: FunctionComponent;\r\n    path: string;\r\n    requiredClaims?: string[];\r\n}\r\n\r\nexport function PrivateRoute({component, path, requiredClaims=[]}: IProp): JSX.Element {    \r\n\r\n    let authVM: AuthVM = new AuthVM();\r\n\r\n    if (localStorage.getItem(\"authVM\")) {\r\n        authVM = JSON.parse(localStorage.getItem(\"authVM\") as string);\r\n    }\r\n     \r\n    let isAuthenticated: boolean = authVM.isAuthenticated === true ? true : false;\r\n    let claims: string[] = authVM.claims;\r\n    let history = useHistory();\r\n\r\n    if (!isAuthenticated) {\r\n        console.log(\"not authenticated\");\r\n        history.push(\"/login\");\r\n    }\r\n\r\n    let [openSnackBar, setOpenSnackBar] = useState<boolean>(false);\r\n\r\n    let isAuthorized: boolean = requiredClaims.every(requiredClaim => claims.includes(requiredClaim));\r\n\r\n    let linkToLoginForm: JSX.Element = <Fragment>\r\n        <span>Not Authorized </span>\r\n        <NavLink to=\"/login\" style={{color: \"white\"}}><b>Click here to login</b></NavLink>\r\n    </Fragment> \r\n\r\n    useEffect(() => {\r\n        if (!isAuthorized) {\r\n            console.log(\"not authorized\");\r\n            setOpenSnackBar(true);\r\n            return;\r\n            // history.push(\"/login\");\r\n        }\r\n    }, [isAuthorized]);\r\n\r\n    \r\n\r\n    return <Fragment>\r\n        {  isAuthorized\r\n            ? <Route path={path} component= { component } />\r\n            : <ErrorPage />\r\n        }        \r\n        <SnackbarComponent open={openSnackBar} setOpen={setOpenSnackBar} message={linkToLoginForm} severity=\"warning\" autoHideDuration={10000}/>\r\n    </Fragment>\r\n     \r\n}","export enum CLAIMS {\r\n    PRODUCER = \"PRODUCER\",\r\n    CONSUMER = \"CONSUMER\"\r\n}","import React, { Dispatch, Fragment, useContext, useEffect, useState } from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'; \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { Navbar, Nav, NavDropdown, DropdownButton } from 'react-bootstrap';\r\nimport \"./NavBar.css\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AuthVM } from '../../models/AuthVM';\r\nimport { CLAIMS } from '../../enums/Claims';\r\nimport { ACTIONS } from '../../store/actionEnums';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport { logoutSync } from '../../store/thunks/authThunk';\r\n\r\n\r\nexport function NavBar() {\r\n  \r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch: Dispatch<any> = useDispatch(); \r\n\r\n  let authVM: AuthVM = useSelector((action: RootState) => action.authReducer.authVM) ?? new AuthVM(\"ACCOUNT\");\r\n\r\n  let logoutMessage: string = useSelector((action: RootState) => action.authReducer.message) ?? \"\";\r\n\r\n  // When user refresh window, reducer state resets\r\n  // Retrieve again from localstorage\r\n  if (localStorage.getItem(\"authVM\")) {\r\n    authVM = JSON.parse( localStorage.getItem(\"authVM\") as string );\r\n  } \r\n\r\n  const logout = () => {\r\n    const action = logoutSync();\r\n    dispatch(action);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (logoutMessage === ACTIONS.LOGOUT_SUCCESS) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [logoutMessage])\r\n\r\n  return (\r\n    <div>\r\n      <Navbar expand=\"lg\" variant=\"dark\" className={classes.blueBg}>\r\n          <Navbar.Brand><NavLink to=\"/\" className={classes.navLink} >BulkApi</NavLink></Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n\r\n                {/* Consumer NavBar */}\r\n                { authVM.claims?.includes(CLAIMS.CONSUMER) &&\r\n\r\n                  <Fragment>\r\n                    <Button color=\"inherit\" ><NavLink to=\"/\" className={classes.navLink} >Products</NavLink></Button>\r\n                    <Button color=\"inherit\"><NavLink to=\"/cart\" className={classes.navLink}>Cart</NavLink></Button>\r\n                    <Button color=\"inherit\"><NavLink to=\"/orders\" className={classes.navLink}>Orders</NavLink></Button>\r\n                  </Fragment>\r\n                }\r\n              \r\n                {/* Producer NavBar */}\r\n                { authVM.claims?.includes(CLAIMS.PRODUCER) &&\r\n                  <Fragment>\r\n                    <Button color=\"inherit\"><NavLink to=\"/producer/discountSchemes\" className={classes.navLink} >Schemes</NavLink></Button>\r\n                    <Button color=\"inherit\"><NavLink to=\"/producer/products\" className={classes.navLink} >Products</NavLink></Button>                    \r\n                  </Fragment>\r\n                }\r\n                \r\n              </Nav>\r\n\r\n              {/* Authentication DropDown */}\r\n              <DropdownButton alignRight title={authVM.userName}>\r\n              { authVM.isAuthenticated\r\n                ? <NavDropdown.Item >\r\n                    <Nav.Link as={NavLink} onClick={logout} to=\"/login\" style={{color: \"black\"}}>LOGOUT</Nav.Link>\r\n                  </NavDropdown.Item> \r\n                : <NavDropdown.Item >\r\n                  <Nav.Link as={NavLink} to=\"/login\" style={{color: \"black\"}}>LOGIN</Nav.Link>\r\n                </NavDropdown.Item> \r\n              }\r\n              </DropdownButton>\r\n                  \r\n                       \r\n                \r\n          </Navbar.Collapse>\r\n          \r\n      </Navbar>\r\n      <br/>\r\n    </div>\r\n  );\r\n}\r\n \r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    navLink: {\r\n        color: \"white\",\r\n        textDecoration: \"inherit\",        \r\n    },\r\n    blueBg: {\r\n      backgroundColor: \"#3f51b5\",\r\n      textDecoration: \"inherit\", \r\n    },\r\n    dropDownLink: {\r\n      color: \"black\",\r\n      textDecoration: \"inherit\",\r\n    }\r\n  }),\r\n);\r\n","import { DiscountScheme } from \"./DiscountScheme\";\r\n\r\nexport class Bid {\r\n    bidId: number = 0;\r\n    isInCart: boolean = false;\r\n    quantity: number = 0;\r\n    bidSuccessDate: Date | null = null;\r\n\r\n    collectionAddress: string = \"\";\r\n\r\n    discountSchemeId: number = 0;\r\n    discountScheme: DiscountScheme | null = null;\r\n\r\n    customerId: number = 0;\r\n\r\n    //View model properties\r\n    currentTotalBids?: number = 0;\r\n    addressBidCountDict?: Record<string, number> = {}\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Container from '@material-ui/core/Container';\r\nimport e_commerce from '../../images/e_commerce.png';\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { CartButtons } from \"../../components/shared/CartButtons\";\r\nimport { SelectControlledComponent } from \"../../components/shared/SelectComponents\";\r\nimport { SnackbarComponent } from \"../../components/shared/SnackbarComponent\";\r\nimport { TextComponent } from \"../../components/shared/TextComponent\";\r\nimport { Bid } from \"../../models/Bid\";\r\nimport { DiscountScheme } from \"../../models/DiscountScheme\";\r\nimport { SelectListItem } from \"../../models/SelectListItem\";\r\nimport { RootState } from \"../../store/rootReducer\";\r\nimport { addBidToCartAsync, updateBidInCartAsync } from \"../../store/thunks/bidThunk\";\r\nimport { getDiscountSchemeAsync } from \"../../store/thunks/discountSchemeThunk\";\r\n\r\nexport interface IProps {\r\n    discountSchemeId: number;\r\n    MODE: \"CREATE\" | \"UPDATE\";\r\n    bidIdToUpdate?: number;\r\n}\r\n\r\nexport function DiscountSchemeDetailPage({discountSchemeId, MODE, bidIdToUpdate=0}: IProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();  \r\n\r\n    // Quantity to add to cart\r\n    const [quantity, setQuantity] = useState(1);    \r\n\r\n    // State to determine whether to show notification\r\n    const [open, setOpen] = useState(false);\r\n    \r\n  \r\n    // The discountScheme retrieved through a GET request\r\n    useEffect(() => {\r\n        const action = getDiscountSchemeAsync(discountSchemeId);\r\n        dispatch(action);\r\n        \r\n        // Note that you cannot pass values obtained from useSelector to the useEffect dependency array\r\n        // Since you are returning a new object (at a different memory address) from the reducer, \r\n        // useEffect will treat it that vaLue changed when doing shallow comparison\r\n    }, [discountSchemeId]);  \r\n\r\n    let ds: DiscountScheme = useSelector((action: RootState) => action.discountSchemeReducer.discountScheme as DiscountScheme ) ?? new DiscountScheme();      \r\n\r\n    console.log(\"in DiscountSchemeDetailPage\", ds);\r\n\r\n    // Collection Address\r\n    const addressBidCountDict = ds.addressBidCountDict as Record<string, number>;   // { collectionAddress: number of bids} \r\n    const selectListItems: SelectListItem[] = [];\r\n    for (let address in addressBidCountDict) {\r\n        let selectListItem: SelectListItem = new SelectListItem(address, address);\r\n        selectListItems.push(selectListItem);\r\n    }\r\n\r\n    const [address, setAddress] = useState<string>(\"\");\r\n    const handleChangeAddress = (event: React.ChangeEvent<any>) => {\r\n        let selectedAddress: string = event.target.value;\r\n        console.log(selectedAddress);\r\n        setAddress(selectedAddress);\r\n    }\r\n    const numBidsAtAddress: number = addressBidCountDict?.address;\r\n    const avgDeliveryCharge: number = (!numBidsAtAddress) ? ds.deliveryCharge : ds.deliveryCharge / (numBidsAtAddress + 1);\r\n \r\n    // POST bid when user bids for the discountScheme\r\n    const submitBid = () => {\r\n        let bid: Bid = new Bid();\r\n        bid.customerId = 1;\r\n        bid.collectionAddress = address;\r\n        bid.quantity = quantity;\r\n\r\n        let action = null;\r\n        if (MODE === \"CREATE\") {\r\n            bid.discountSchemeId = ds.discountSchemeId;\r\n            action = addBidToCartAsync(bid);\r\n        } else if (MODE === \"UPDATE\") {\r\n            bid.bidId = bidIdToUpdate;\r\n            action = updateBidInCartAsync(bid);\r\n        }\r\n\r\n        dispatch(action);\r\n        setOpen(true);\r\n    };\r\n    \r\n    // The details of the the discountScheme to display\r\n    let dateString: string = \"\";\r\n    if (ds.expiryDate) {\r\n        let date: Date = new Date(ds.expiryDate.toString());\r\n        dateString = date.toDateString();\r\n    }  \r\n\r\n    let currentBids: number = ds.bids\r\n            .filter(bid => !bid.isInCart)\r\n            .reduce((accum, bid) => accum + bid?.quantity, 0);\r\n    \r\n    let leftExpiryDateDict: Record<string, any> = {\r\n        \"Expiry Date\": dateString\r\n    }\r\n    let rightDescriptionDict: Record<string, any> = {\r\n        \"Description\": ds.product?.description,\r\n    }\r\n    let leftPriceDict: Record<string, any> = {\r\n        \"Discounted Price\": \"$\" + ds.discountedPrice,\r\n    }\r\n    let rightPriceDict: Record<string, any> = {\r\n        \"Original Price\": \"$\" + ds.product?.originalPrice ?? \"$\"\r\n    }\r\n    let leftQuantityDict: Record<string, any> = {\r\n        \"Remaining Bids Needed\": ds.minOrderQnty - currentBids,\r\n    }\r\n    let rightQuantityDict: Record<string, any> = {\r\n        \"Min Collective Quantity\": ds.minOrderQnty,\r\n        \"Current Total Bids\": currentBids,\r\n    }\r\n    let addressTextDict: Record<string, any> = {\r\n        \"Delivery Charge\": \"$\" + ds.deliveryCharge,\r\n        \"Current bids at collection point\": numBidsAtAddress,\r\n    }\r\n    let avgDeliveryChargeDict: Record<string, any> = {\r\n        \"Current Average Delivery charge\": \"approx $\" + avgDeliveryCharge\r\n    }    \r\n    return  <Container maxWidth=\"sm\">\r\n        <Typography color=\"primary\" variant=\"h5\" align=\"left\">{ds.product?.name ?? \"\"}</Typography>\r\n        <CardMedia \r\n            component=\"img\"\r\n            image={e_commerce}\r\n            title=\"https://acowebs.com/impact-ecommerce-society/\"/>\r\n        <br/>\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                    <TextComponent textDict={rightDescriptionDict}/>\r\n                    <hr/>\r\n                </Grid>\r\n            <Grid item xs={12}>\r\n                <TextComponent textDict={leftExpiryDateDict} color=\"textPrimary\"/>\r\n                <hr/>\r\n            </Grid>           \r\n            <Grid item xs={6}>\r\n                <TextComponent textDict={leftPriceDict} color=\"textPrimary\"/>\r\n                <hr/>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextComponent textDict={rightPriceDict}/>  \r\n                <hr/>          \r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextComponent textDict={leftQuantityDict} color=\"textPrimary\"/>            \r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextComponent textDict={rightQuantityDict}/>            \r\n            </Grid>\r\n        </Grid>\r\n        \r\n        <hr/>\r\n        <Grid container>\r\n            <Grid item xs={4}>        \r\n                <SelectControlledComponent title={\"Delivery\"} state={address} selectListItems={selectListItems} handleChange={handleChangeAddress} />\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n                <TextComponent textDict={addressTextDict} />\r\n                <TextComponent textDict={avgDeliveryChargeDict} color=\"textPrimary\" />\r\n            </Grid>\r\n        </Grid>\r\n        <hr/>\r\n       \r\n        <CartButtons quantity={quantity} setQuantity={setQuantity} align={\"alignCenter\"}/>\r\n        <ButtonGroup size={\"medium\"}>            \r\n            <Button  onClick={submitBid} color=\"primary\" variant=\"contained\" disabled={!address || quantity < 1}>Add To Cart</Button>           \r\n          </ButtonGroup>\r\n        <SnackbarComponent open={open} setOpen={setOpen} message={\"Bid successfully created\"} severity={\"success\"}/>\r\n    </Container>\r\n}","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { DiscountSchemeDetailPage } from \"./DiscountSchemeDetailPage\";\r\n\r\n// Essentially a HOC\r\nexport function DiscountSchemeDetailHOC(): JSX.Element {\r\n    \r\n    // DiscountScheme Id parse from route parameter\r\n    let routeParams: Record<string, string>  = (useParams()) as Record<string, string>;\r\n    const discountSchemeId: number = parseInt(routeParams[\"discountSchemeId\"]);\r\n\r\n    return <DiscountSchemeDetailPage discountSchemeId={discountSchemeId} MODE=\"CREATE\" />\r\n}","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport { DiscountSchemesPage } from './containers/DiscountSchemesPage';\r\nimport { Route } from 'react-router-dom';\r\nimport { Switch, BrowserRouter as Router } from 'react-router-dom';\r\nimport { CartPage } from './containers/CartPage';\r\nimport { OrdersPage } from './containers/OrdersPage';\r\nimport { ProducerDiscountSchemePage } from './containers/ProducerDiscountSchemePage';\r\nimport { DiscountSchemeForm } from './containers/DiscountSchemeForm';\r\nimport { ProductForm } from './containers/ProductForm';\r\nimport { ProductsPage } from './containers/ProductsPage';\r\nimport { LoginForm } from './containers/LoginForm';\r\nimport { PrivateRoute } from './components/app/PrivateRoute';\r\nimport { AuthContext } from './contexts/AuthContext';\r\nimport { AuthVM, Claims } from './models/AuthVM';\r\nimport { NavBar } from './components/app/NavBar';\r\nimport { DiscountSchemeDetailHOC } from './containers/DiscountSchemeDetail/DiscountSchemeDetailHOC';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n      <div className=\"App\">\r\n        <Router>\r\n          <NavBar/>\r\n          <Switch>\r\n            {/* Public Paths */}\r\n            <Route path=\"/login\" component={ LoginForm } />\r\n            <Route exact path=\"/\" component={ DiscountSchemesPage } />\r\n\r\n            {/* Consumer paths */}\r\n            <PrivateRoute path=\"/discountScheme/:discountSchemeId\" component= { DiscountSchemeDetailHOC } requiredClaims={[Claims.CONSUMER]} />\r\n            <PrivateRoute path=\"/cart\" component= { CartPage } requiredClaims={[Claims.CONSUMER]} />\r\n            <PrivateRoute path=\"/orders\" component= { OrdersPage } requiredClaims={[Claims.CONSUMER]} />\r\n\r\n            {/* Producer paths */}\r\n            <PrivateRoute path=\"/producer/products\" component = { ProductsPage } requiredClaims={[Claims.PRODUCER]} />\r\n            <PrivateRoute path=\"/producer/product/:productId\" component = { ProductForm } requiredClaims={[Claims.PRODUCER]} />            \r\n            <PrivateRoute path=\"/producer/discountSchemes/create\" component = { DiscountSchemeForm } requiredClaims={[Claims.PRODUCER]} />\r\n            <PrivateRoute path=\"/producer/discountSchemes\" component = { ProducerDiscountSchemePage } requiredClaims={[Claims.PRODUCER]} />\r\n          </Switch>\r\n        </Router> \r\n      </div>    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ACTIONS } from \"../actionEnums\";\r\nimport {cloneDeep} from 'lodash';\r\nimport { DiscountScheme } from \"../../models/DiscountScheme\";\r\nimport { IDiscountSchemeAction } from \"../thunks/discountSchemeThunk\";\r\n\r\nconst initialState : IDiscountSchemeAction = {\r\n    type: \"\",\r\n    discountSchemes: null\r\n}\r\n\r\nexport default function discountSchemeReducer(prevState = initialState, action: IDiscountSchemeAction): IDiscountSchemeAction {\r\n    let newState: IDiscountSchemeAction = cloneDeep(prevState);\r\n    newState.type = action.type;\r\n    newState.message = `${action.message} ${(new Date())}`;\r\n    newState.httpMessage = `${action.httpMessage} ${new Date()}`;\r\n    console.log(\"in discountSchemeReducer\", newState.httpMessage);\r\n\r\n    switch(action.type) {        \r\n        case(ACTIONS.GET_DISCOUNTSCHEMES_REQUEST):\r\n            console.log(action.message);\r\n            return newState;\r\n        case(ACTIONS.GET_DISCOUNTSCHEMES_RECEIVED):\r\n            console.log(\"GET_DISCOUNTSCHEMES_RECEIVED\");\r\n            let discountSchemes: DiscountScheme[] = action.discountSchemes as DiscountScheme[];\r\n            newState.discountSchemes = discountSchemes;\r\n            return newState;\r\n        case(ACTIONS.GET_DISCOUNTSCHEME_REQUEST):\r\n            console.log(action.message);\r\n            return newState;\r\n        case(ACTIONS.GET_DISCOUNTSCHEME_RECEIVED):\r\n            console.log(\"ACTIONS.GET_DISCOUNTSCHEME_RECEIVED\")\r\n            const discountScheme: DiscountScheme = action.discountScheme as DiscountScheme;\r\n            newState.discountScheme = discountScheme;\r\n            return newState;\r\n        case(ACTIONS.GET_DISCOUNTSCHEME_OF_PRODUCER_REQUEST):\r\n            console.log(action.message);\r\n            return newState;\r\n        case(ACTIONS.GET_DISCOUNTSCHEME_OF_PRODUCER_RECEIVED):\r\n            console.log(action.discountSchemes);\r\n            newState.discountSchemes = action.discountSchemes as DiscountScheme[];\r\n            return newState;\r\n        case(ACTIONS.CREATE_DISCOUNTSCHEME_REQUEST):\r\n            console.log(action.message);           \r\n            return newState;\r\n        case(ACTIONS.CREATE_DISCOUNTSCHEME_RECEIVED):\r\n            newState.discountScheme = action.discountScheme as DiscountScheme;\r\n            return newState;\r\n        case(ACTIONS.DELETE_DISCOUNTSCHEME_REQUEST):\r\n            return newState;\r\n        case(ACTIONS.DELETE_DISCOUNTSCHEME_RECEIVED):\r\n            newState.discountScheme = action.discountScheme;\r\n            return newState;\r\n        default:\r\n            return prevState;\r\n    }\r\n    \r\n}","import { IBidAction } from \"../thunks/bidThunk\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport { ACTIONS } from \"../actionEnums\";\r\n\r\nconst initialState : IBidAction = {\r\n    type: \"\",\r\n    bid: undefined,\r\n    bids: undefined,\r\n    message: \"Initial Message\",\r\n    httpMessage: \"Initial Response Message\",        \r\n}\r\n\r\nexport default function bidReducer(prevState = initialState, action: IBidAction): IBidAction {\r\n    let newState: IBidAction = cloneDeep(prevState);\r\n    \r\n    newState.type = action.type;\r\n    newState.message = `${action.message} ${(new Date())}`;\r\n    newState.httpMessage = `${action.httpMessage} + ${new Date()}`;\r\n\r\n    //console.log(\"in bidReducer. Latest message\", newState.message);\r\n    //console.log(\"in bidReducer. Latest api message\", newState.httpMessage);\r\n \r\n    switch(action.type) {    \r\n        case(ACTIONS.ADD_BID_TO_CART_REQUEST):\r\n            return newState;    \r\n        case(ACTIONS.ADD_BID_TO_CART_RECEIVED): \r\n            newState.bid = action.bid;\r\n            return newState;\r\n        case(ACTIONS.GET_BIDSOFCUSTOMER_INCART_REQUEST):\r\n            return newState;\r\n        case(ACTIONS.GET_BIDSOFCUSTOMER_INCART_RECEIVED):\r\n            newState.bids = action.bids;\r\n            console.log(newState.bids);\r\n            return newState;\r\n        case(ACTIONS.ADD_BID_TO_CART_REQUEST):\r\n            return newState;    \r\n        case(ACTIONS.UPDATE_BID_IN_CART_REQUEST):\r\n            return newState;\r\n        case(ACTIONS.UPDATE_BID_IN_CART_RECEIVED):\r\n            return newState;\r\n        case(ACTIONS.DELETE_BID_IN_CART_REQUEST):\r\n            return newState;\r\n        case(ACTIONS.DELETE_BID_IN_CART_RECEIVED):\r\n            return newState;\r\n        case(ACTIONS.ORDER_BIDS_IN_CART_REQUEST):\r\n            return newState;\r\n        case(ACTIONS.ORDER_BIDS_IN_CART_RECEIVED):\r\n            return newState;\r\n        case(ACTIONS.GET_PENDING_OR_SUCCESSFUL_BIDS_REQUEST):\r\n            return newState;\r\n        case(ACTIONS.GET_PENDING_OR_SUCCESSFUL_BIDS_RECEIVED):\r\n            newState.bids = action.bids;\r\n            return newState;\r\n        default:\r\n            return prevState;\r\n    }\r\n    \r\n}","import { IProductAction } from \"../thunks/productThunk\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport { ACTIONS } from \"../actionEnums\";\r\n\r\nconst initialState: IProductAction = {\r\n    type: \"\",\r\n    product: undefined,\r\n    products: undefined,\r\n    message: \"\",\r\n    httpMessage: \"\" // For API messages\r\n}\r\n\r\nexport default function productReducer(prevState = initialState, action: IProductAction): IProductAction {\r\n\r\n    let newState: IProductAction = cloneDeep(prevState);\r\n    \r\n    newState.type = action.type;\r\n    newState.message = `${action.message} ${(new Date())}`;\r\n    newState.httpMessage = `${action.httpMessage} + ${new Date()}`;\r\n\r\n    console.log(\"in productReducer. Latest message\", newState.message);\r\n    console.log(\"in productReducer. Latest api message\", newState.httpMessage);\r\n\r\n    switch(action.type) {\r\n        case(ACTIONS.GET_PRODUCTS_REQUEST):\r\n            return newState;\r\n        case (ACTIONS.GET_PRODUCTS_RECEIVED):\r\n            newState.products = action.products;\r\n            return newState;\r\n        case(ACTIONS.CREATE_PRODUCT_REQUEST):\r\n            return newState;\r\n        case(ACTIONS.CREATE_PRODUCT_RECEIVED):\r\n            newState.product = action.product;\r\n            return newState;\r\n        case(ACTIONS.GET_PRODUCT_REQUEST):\r\n            return newState;\r\n        case(ACTIONS.GET_PRODUCT_RECEIVED):\r\n            newState.product = action.product;\r\n            return newState;\r\n        case(ACTIONS.UPDATE_PRODUCT_RECEIVED):\r\n            return newState;\r\n        case(ACTIONS.UPDATE_PRODUCT_REQUEST):\r\n            console.log(\"received updatedProduct\", action.product);\r\n            newState.product = action.product;\r\n            return newState;\r\n        case(ACTIONS.DELETE_PRODUCT_REQUEST):\r\n            return newState;\r\n        case(ACTIONS.DELETE_PRODUCT_RECEIVED):\r\n            newState.product = action.product;\r\n            return newState;\r\n        default:\r\n            return prevState;\r\n    }\r\n\r\n}","import { IErrorAction } from \"../actions/errorAction\";\r\nimport { ACTIONS } from \"../actionEnums\";\r\n\r\nconst initialState : IErrorAction = {\r\n    type: \"\",\r\n    error: null\r\n}\r\n\r\nexport default function errorReducer(prevState = initialState, action: IErrorAction): IErrorAction {\r\n    const { type, error } = action;\r\n    // Must make sure to clear all errors before redirecting, otherwise errors will persist even at the next component\r\n    if (type === ACTIONS.CLEAR_ERROR) {\r\n        return initialState;\r\n    } else if (error) {\r\n        console.log(\"error received in errorReducer:\", error);\r\n        //When you go to a new component, you want the previous errors to disappear\r\n        return {\r\n            type: type,\r\n            error: action.error\r\n        }         \r\n    }\r\n\r\n    //For any start and finished actions that don't have errors we return the current state.\r\n    return prevState; \r\n}","import { cloneDeep } from \"lodash\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport { AuthVM } from \"../../models/AuthVM\";\r\nimport { ACTIONS } from \"../actionEnums\";\r\nimport { IAuthAction } from \"../thunks/authThunk\";\r\n\r\nconst initialState : IAuthAction = {\r\n    type: \"\",\r\n    identityUser: undefined,\r\n    message: \"Initial Message\",\r\n    httpMessage: \"Initial Response Message\",   \r\n    authVM: undefined     \r\n}\r\n\r\nexport default function authReducer(prevState = initialState, action: IAuthAction): IAuthAction {\r\n\r\n    let newState: IAuthAction = cloneDeep(prevState);\r\n    \r\n    newState.authVM = cloneDeep(action.authVM);\r\n    newState.type = action.type;\r\n    newState.message = `${action.message} ${(new Date())}`;\r\n    newState.httpMessage = `${action.httpMessage} + ${new Date()}`;\r\n \r\n    switch(action.type) {    \r\n        case(ACTIONS.LOGIN_REQUEST):\r\n            return newState;\r\n        case(ACTIONS.LOGIN_SUCCESS): \r\n            localStorage.setItem(\"authVM\", JSON.stringify(action.authVM)); \r\n            return newState;\r\n        case(ACTIONS.LOGIN_FAILED):\r\n            return newState;\r\n        case(ACTIONS.LOGOUT):\r\n            localStorage.removeItem(\"authVM\");\r\n            newState.message = ACTIONS.LOGOUT_SUCCESS;\r\n            return newState;\r\n        default:\r\n            return prevState;            \r\n    }\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport discountSchemeReducer from './reducers/discountSchemeReducer';\r\nimport bidReducer from './reducers/bidReducer';\r\nimport productReducer from './reducers/productReducer';\r\nimport errorReducer from './reducers/errorReducer';\r\nimport authReducer from './reducers/authReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({    \r\n    discountSchemeReducer,\r\n    bidReducer,\r\n    productReducer,\r\n    authReducer,\r\n    errorReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport { rootReducer } from './store/rootReducer';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store} > \r\n    <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n  </Provider> , document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}